{"version":3,"file":"static/js/842.e53dcaa6.chunk.js","mappings":"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","sources":["../../../src/lang/en_US.ts","../../../src/lang/zh_CN.ts","../../src/register.ts","../../../src/utils/date.ts","../../src/format.ts","../../src/index.ts","../node_modules/uuid/dist/esm-browser/native.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/v4.js","../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/@socket.io/component-emitter/index.mjs","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/contrib/yeast.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/webtransport.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/engine.io-client/build/esm/index.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../node_modules/socket.io-client/build/esm/on.js","../node_modules/socket.io-client/build/esm/socket.js","../node_modules/socket.io-client/build/esm/contrib/backo2.js","../node_modules/socket.io-client/build/esm/manager.js","../node_modules/socket.io-client/build/esm/index.js","../node_modules/socket.io-client/build/esm/url.js"],"sourcesContent":[null,null,null,null,null,null,"const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data\n            .arrayBuffer()\n            .then(toArray)\n            .then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, encoded => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nlet TEXT_DECODER;\nexport function decodePacketFromBinary(data, isBinary, binaryType) {\n    if (!TEXT_DECODER) {\n        // lazily created for compatibility with old browser platforms\n        TEXT_DECODER = new TextDecoder();\n    }\n    // 48 === \"0\".charCodeAt(0) (OPEN packet type)\n    // 54 === \"6\".charCodeAt(0) (NOOP packet type)\n    const isPlainBinary = isBinary || data[0] < 48 || data[0] > 54;\n    return decodePacket(isPlainBinary ? data : TEXT_DECODER.decode(data), binaryType);\n}\nexport const protocol = 4;\nexport { encodePacket, encodePacketToBinary, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { encodePacketToBinary, decodePacketFromBinary, } from \"engine.io-parser\";\nfunction shouldIncludeBinaryHeader(packet, encoded) {\n    // 48 === \"0\".charCodeAt(0) (OPEN packet type)\n    // 54 === \"6\".charCodeAt(0) (NOOP packet type)\n    return (packet.type === \"message\" &&\n        typeof packet.data !== \"string\" &&\n        encoded[0] >= 48 &&\n        encoded[0] <= 54);\n}\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const reader = stream.readable.getReader();\n                this.writer = stream.writable.getWriter();\n                let binaryFlag;\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        if (!binaryFlag && value.byteLength === 1 && value[0] === 54) {\n                            binaryFlag = true;\n                        }\n                        else {\n                            // TODO expose binarytype\n                            this.onPacket(decodePacketFromBinary(value, binaryFlag, \"arraybuffer\"));\n                            binaryFlag = false;\n                        }\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const handshake = this.query.sid ? `0{\"sid\":\"${this.query.sid}\"}` : \"0\";\n                this.writer\n                    .write(new TextEncoder().encode(handshake))\n                    .then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacketToBinary(packet, (data) => {\n                if (shouldIncludeBinaryHeader(packet, data)) {\n                    this.writer.write(Uint8Array.of(54));\n                }\n                this.writer.write(data).then(() => {\n                    if (lastPacket) {\n                        nextTick(() => {\n                            this.writable = true;\n                            this.emitReserved(\"drain\");\n                        }, this.setTimeoutFn);\n                    }\n                });\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["EN_US","ZH_CN","Locales","register","locale","func","SEC_ARRAY","toDate","input","Date","isNaN","test","parseInt","trim","replace","format","date","opts","sec","relativeDate","diffSec","diff","localeFunc","agoIn","totalSec","Math","abs","idx","length","floor","toString","formatDiff","getLocale","unit","randomUUID","crypto","bind","getRandomValues","rnds8","Uint8Array","rng","Error","byteToHex","i","push","slice","unsafeStringify","arr","offset","arguments","undefined","toLowerCase","options","buf","native","rnds","random","PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","_ref","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","byteOffset","byteLength","TEXT_ENCODER","encodePacketToBinary","packet","arrayBuffer","then","encoded","TextEncoder","encode","chars","lookup","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","TEXT_DECODER","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","once","off","apply","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","_len","attr","_key","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","useNativeTimers","setTimeoutFn","clearTimeoutFn","TransportError","constructor","reason","description","context","super","Transport","writable","query","socket","onError","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","str","encodeURIComponent","alphabet","map","prev","seed","num","yeast","now","value","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Request","uri","method","_a","xd","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","status","onLoad","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","WebSocket","MozWebSocket","isReactNative","navigator","product","shouldIncludeBinaryHeader","transports","websocket","forceBase64","name","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","timestampRequests","timestampParam","b64","webtransport","WebTransport","transport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","reader","readable","getReader","binaryFlag","writer","getWriter","read","done","isBinary","TextDecoder","isPlainBinary","decodePacketFromBinary","handshake","sid","of","polling","location","isSSL","protocol","createCookieJar","poll","total","doPoll","decodePayload","encodedPayload","encodedPackets","decodedPacket","encodePayload","count","doWrite","request","assign","req","xhrStatus","pollXhr","re","parts","parse","src","b","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","c","utf8Length","ceil","size","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","isObject","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","_len2","_key2","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","notifyOutgoingListeners","_this","ackTimeout","timer","_len3","_key3","emitWithAck","_len4","_key4","withErr","reject","arg1","arg2","_this2","tryCount","pending","_len5","responseArgs","_key5","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","_lastOffset","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listener","sent","_len6","_key6","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","loc","href","url","sameNamespace","forceNew","multiplex"],"sourceRoot":""}