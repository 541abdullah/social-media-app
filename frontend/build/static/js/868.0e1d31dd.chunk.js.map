{"version":3,"file":"static/js/868.0e1d31dd.chunk.js","mappings":"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","sources":["components/header.js","components/leftpain.js","components/modals/createpostmodal.js","components/modals/loadingmodal.js","components/modals/yesnomodal.js","components/shimmer.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport CircleIcon from '@mui/icons-material/Circle';\r\nimport LightModeIcon from '@mui/icons-material/LightMode';\r\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { red } from '@mui/material/colors';\r\nimport \"../corecss/header.css\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { iconresets } from '../features/iconreseter';\r\nimport { currview } from '../features/profile';\r\nimport Shimmer from './shimmer.js';\r\nimport { themeselector } from '../features/theme.js';\r\n\r\nconst Header = ({ caller, extra }) => {\r\n\r\n    let curuser = useSelector((state) => { return state.youryr.value });\r\n    let themer = useSelector((state) => { return state.themeyr.value });\r\n\r\n    let [ismsg, setIsmsg] = useState(true);\r\n    let [textval, setTextval] = useState(8);\r\n    let [newmessages, setNewmessages] = useState(0);\r\n\r\n    let nav = useNavigate();\r\n    let disp = useDispatch();\r\n\r\n    let url = \"http://localhost:3001\";\r\n    //let url = \"https://social-media-app-backend-final.onrender.com\";\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        async function newchats() {\r\n\r\n\r\n            const result = await fetch(`${url}/messenger/lineup/order/${curuser.userid}`, {\r\n                credentials: 'include'\r\n            });\r\n\r\n            const data = await result.json();\r\n\r\n\r\n            if (data.convs == undefined) {\r\n                setNewmessages(0);\r\n            } else {\r\n\r\n                const trutharray = Object.values(data.convs.unread);\r\n                let counter = 0;\r\n                for (let i = 0; i < trutharray.length; i++) {\r\n                    if (trutharray[i]) {\r\n                        counter++;\r\n                    }\r\n                }\r\n\r\n                setNewmessages(counter);\r\n\r\n            }\r\n        }\r\n\r\n        newchats();\r\n\r\n    }, [curuser]);\r\n\r\n\r\n    const msgsopener = () => {\r\n\r\n        disp(iconresets(true));\r\n        nav('/messenger/insider/null');\r\n\r\n    }\r\n\r\n    const selfprofile = () => {\r\n\r\n        disp(currview(curuser.usrn));\r\n        nav(`/profile/${curuser.usrn}`);\r\n\r\n        if (caller == 'profile' && curuser.usrn != extra.current) {\r\n            extra.setPersonsdets(null);\r\n        }\r\n\r\n    }\r\n\r\n    // icon coloriser\r\n\r\n    const theme = createTheme({\r\n        palette: {\r\n            primary: red,\r\n        },\r\n    });\r\n\r\n\r\n    const changetheme = () => {\r\n\r\n        disp(themeselector(!themer));\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className={themer ? 'header' : \"header headernight\"}>\r\n\r\n            <div className='headerleft'>\r\n                <svg\r\n                    width=\"24\"\r\n                    height=\"24\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    fill=\"none\"\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    className={themer ? 'logo' : 'logo logonight'}\r\n                >\r\n                    <path\r\n                        fill-rule=\"evenodd\"\r\n                        clip-rule=\"evenodd\"\r\n                        d=\"M12 7C9.23858 7 7 9.23858 7 12C7 14.7614 9.23858 17 12 17C14.7614 17 17 14.7614 17 12C17 9.23858 14.7614 7 12 7ZM9 12C9 13.6569 10.3431 15 12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9C10.3431 9 9 10.3431 9 12Z\"\r\n                        fill=\"currentColor\"\r\n                    />\r\n                    <path\r\n                        d=\"M18 5C17.4477 5 17 5.44772 17 6C17 6.55228 17.4477 7 18 7C18.5523 7 19 6.55228 19 6C19 5.44772 18.5523 5 18 5Z\"\r\n                        fill=\"currentColor\"\r\n                    />\r\n                    <path\r\n                        fill-rule=\"evenodd\"\r\n                        clip-rule=\"evenodd\"\r\n                        d=\"M5 1C2.79086 1 1 2.79086 1 5V19C1 21.2091 2.79086 23 5 23H19C21.2091 23 23 21.2091 23 19V5C23 2.79086 21.2091 1 19 1H5ZM19 3H5C3.89543 3 3 3.89543 3 5V19C3 20.1046 3.89543 21 5 21H19C20.1046 21 21 20.1046 21 19V5C21 3.89543 20.1046 3 19 3Z\"\r\n                        fill=\"currentColor\"\r\n                    />\r\n                </svg>\r\n            </div>\r\n            <div className='headerright'>\r\n                {newmessages != 0 &&\r\n                    <>\r\n                        <ThemeProvider theme={theme}>\r\n                            {ismsg && <CircleIcon className=\"fortexts\" color=\"primary\" fontSize='medium'></CircleIcon>}\r\n                        </ThemeProvider>\r\n                        {ismsg && <span className={textval < 10 ? \"countertexts\" : \"countertextsdouble\"}  >{newmessages}</span>}\r\n\r\n                    </>\r\n                }\r\n\r\n                <SendIcon className={themer ? 'texts' : 'texts textsnight'} fontSize='large' onClick={msgsopener} />\r\n\r\n                <div className='theme'>\r\n                    {themer && <DarkModeIcon className='darkmode' fontSize='large' onClick={changetheme} />}\r\n                    {!themer && <LightModeIcon className='lightmode' fontSize='large' onClick={changetheme} />}\r\n                </div>\r\n\r\n                {\r\n                    curuser.pfp\r\n\r\n                        ?\r\n\r\n                        <img src={curuser.pfp} className={themer ? 'smallpfp' : \"smallpfp smallpfpnight\"} alt=\"\" onClick={() => { selfprofile() }} />\r\n\r\n                        :\r\n\r\n                        <div className='falseuser'>\r\n                            <Shimmer></Shimmer>\r\n                        </div>\r\n\r\n                }\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Header;","import ExploreIcon from '@mui/icons-material/Explore';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport NotificationsNoneIcon from '@mui/icons-material/NotificationsNone';\r\nimport CircleIcon from '@mui/icons-material/Circle';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport \"../corecss/welcomepage.css\";\r\nimport Yesnomodal from \"./modals/yesnomodal\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { currview } from '../features/profile';\r\nimport { iconresets } from '../features/iconreseter';\r\nimport { notifvisit } from '../features/notifvisit';\r\nimport { useState, useEffect, useRef, useCallback } from 'react';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { red } from '@mui/material/colors';\r\nimport Createmodal from './modals/createpostmodal';\r\nimport { leftpsets } from '../features/leftp';\r\n\r\nconst Leftpain = ({ parent }) => {\r\n\r\n  let [isnotif, setIsnotif] = useState(true);\r\n  let [notifsval, setNotifsval] = useState(6);\r\n  let [slidedown, setSlidedown] = useState(false);\r\n  let [ddcloseanim, setDdcloseanim] = useState(false);\r\n  let [theslide, setTheslide] = useState(false);\r\n  let [iscreate, setIscreate] = useState(false);\r\n  let [allreqs, setAllreqs] = useState(false);\r\n  let [newnotifs, setNewnotifs] = useState(0);\r\n  let [skipvalseven, setSkipvalseven] = useState(5);\r\n  let [loaderseven, setLoaderseven] = useState(null);\r\n  let [sevenarray, setSevenarray] = useState([]);\r\n  let [skipvalthirty, setSkipvalthirty] = useState(5);\r\n  let [loaderthirty, setLoaderthirty] = useState(null);\r\n  let [thirtyarray, setThirtyarray] = useState([]);\r\n  let [skipvalolder, setSkipvalolder] = useState(5);\r\n  let [loaderolder, setLoaderolder] = useState(null);\r\n  let [olderarray, setOlderarray] = useState([]);\r\n  let [currentselect, setCurrentselect] = useState(useSelector((state) => { return state.selectedleftp.value }));\r\n  let [cursel, setCursel] = useState(null);\r\n  let [logout, setLogout] = useState(false);\r\n  let [notifsevenarray, setNotifsevenarray] = useState([]);\r\n  let [notifthirtyarray, setNotifthirtyarray] = useState([]);\r\n  let [notifolderarray, setNotifolderarray] = useState([]);\r\n\r\n  let curuser = useSelector((state) => { return state.youryr.value });\r\n  let ismessagesclicked = useSelector((state) => { return state.iconresetyr.value });\r\n  let themer = useSelector((state) => { return state.themeyr.value });\r\n  const notifprofile = useSelector((state) => { return state.notifprofilevisit.value });\r\n\r\n  let nav = useNavigate();\r\n  let disp = useDispatch();\r\n\r\n  let referseven = useRef(null);\r\n  let doublstopperseven = useRef(1);\r\n  let scrollstopperseven = useRef(6);\r\n  let lastloaderseven = useRef(1);\r\n  let referthirty = useRef(null);\r\n  let doublstopperthirty = useRef(1);\r\n  let scrollstopperthirty = useRef(6);\r\n  let lastloaderthirty = useRef(1);\r\n  let referolder = useRef(null);\r\n  let doublstopperolder = useRef(1);\r\n  let scrollstopperolder = useRef(6);\r\n  let lastloaderolder = useRef(1);\r\n  let firsttime = useRef(false);\r\n\r\n  let url = \"http://localhost:3001\";\r\n  //let url = \"https://social-media-app-backend-final.onrender.com\";\r\n\r\n\r\n  if (ismessagesclicked) {\r\n    disp(leftpsets('None'));\r\n    disp(iconresets(false));\r\n  }\r\n\r\n\r\n  const fetchDataseven = useCallback(async () => {\r\n\r\n\r\n    const result = await fetch(`${url}/notif/week/nextfive/${curuser.usrn}?skip=${skipvalseven}`, {\r\n      credentials: 'include',\r\n    })\r\n\r\n    const data = await result.json();\r\n\r\n    if (data.length < 5) {\r\n      setLoaderseven(false);\r\n    }\r\n\r\n    scrollstopperseven.current = data.length;\r\n    setSevenarray((sevenarray) => [...sevenarray, ...data]);\r\n    setSkipvalseven((skipvalseven) => skipvalseven + 5);\r\n    setLoaderseven(false);\r\n    doublstopperseven.current = 1;\r\n\r\n  }, [loaderseven, curuser]);\r\n\r\n\r\n  const fetchDatathirty = useCallback(async () => {\r\n\r\n\r\n    const result = await fetch(`${url}/notif/month/nextfive/${curuser.usrn}?skip=2`, {\r\n      credentials: 'include',\r\n    })\r\n\r\n    const data = await result.json();\r\n\r\n    if (data.length < 5) {\r\n      setLoaderthirty(false);\r\n    }\r\n\r\n    scrollstopperthirty.current = data.length;\r\n    setThirtyarray((thirtyarray) => [...thirtyarray, ...data]);\r\n    setSkipvalthirty((skipvalthirty) => skipvalthirty + 5);\r\n    setLoaderthirty(false);\r\n    doublstopperthirty.current = 1;\r\n\r\n  }, [loaderthirty, curuser]);\r\n\r\n\r\n  const fetchDataolder = useCallback(async () => {\r\n\r\n\r\n    const result = await fetch(`${url}/notif/older/nextfive/${curuser.usrn}?skip=${skipvalolder}`, {\r\n      credentials: 'include',\r\n    })\r\n\r\n    const data = await result.json();\r\n\r\n    if (data.length < 5) {\r\n      setLoaderolder(false);\r\n    }\r\n\r\n    scrollstopperolder.current = data.length;\r\n    setOlderarray((olderarray) => [...olderarray, ...data]);\r\n    setSkipvalolder((skipvalolder) => skipvalolder + 5);\r\n    setLoaderolder(false);\r\n    doublstopperolder.current = 1;\r\n\r\n  }, [loaderolder, curuser]);\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    const handleScrollseven = () => {\r\n\r\n      if (doublstopperseven.current == 1) {\r\n        if (Math.abs(referseven.current.scrollHeight - referseven.current.clientHeight - referseven.current.scrollTop) < 1) {\r\n\r\n\r\n          if (scrollstopperseven.current >= 5) {\r\n\r\n            fetchDataseven();\r\n            setLoaderseven(true);\r\n            doublstopperseven.current = 0;\r\n\r\n          }\r\n\r\n          if (scrollstopperseven.current < 5) {\r\n            if (lastloaderseven.current) {\r\n              setLoaderseven(true);\r\n              lastloaderseven.current = 0;\r\n              setTimeout(() => {\r\n                setLoaderseven(false);\r\n              }, 3000);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n    };\r\n\r\n\r\n\r\n    const handleScrollthirty = () => {\r\n\r\n      if (doublstopperthirty.current == 1) {\r\n        if (Math.abs(referthirty.current.scrollHeight - referthirty.current.clientHeight - referthirty.current.scrollTop) < 1) {\r\n\r\n\r\n          if (scrollstopperthirty.current >= 5) {\r\n\r\n            fetchDatathirty();\r\n            setLoaderthirty(true);\r\n            doublstopperthirty.current = 0;\r\n\r\n          }\r\n\r\n          if (scrollstopperthirty.current < 5) {\r\n            if (lastloaderthirty.current) {\r\n              setLoaderthirty(true);\r\n              lastloaderthirty.current = 0;\r\n              setTimeout(() => {\r\n                setLoaderthirty(false);\r\n              }, 3000);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n    };\r\n\r\n\r\n    const handleScrollolder = () => {\r\n\r\n      if (doublstopperolder.current == 1) {\r\n        if (Math.abs(referolder.current.scrollHeight - referolder.current.clientHeight - referolder.current.scrollTop) < 1) {\r\n\r\n          if (scrollstopperolder.current >= 5) {\r\n\r\n            fetchDataolder();\r\n            setLoaderolder(true);\r\n            doublstopperolder.current = 0;\r\n          }\r\n\r\n          if (scrollstopperolder.current < 5) {\r\n            if (lastloaderolder.current) {\r\n              setLoaderolder(true);\r\n              lastloaderolder.current = 0;\r\n              setTimeout(() => {\r\n                setLoaderolder(false);\r\n              }, 3000);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n    };\r\n\r\n    if (referseven.current != null && referthirty.current != null && referolder.current != null) {\r\n\r\n      referseven.current.addEventListener(\"scroll\", handleScrollseven);\r\n      referthirty.current.addEventListener(\"scroll\", handleScrollthirty);\r\n      referolder.current.addEventListener(\"scroll\", handleScrollolder);\r\n      return () => {\r\n\r\n\r\n        if (referseven.current != null && referthirty.current != null && referolder.current != null) {\r\n\r\n\r\n          referseven.current.removeEventListener(\"scroll\", handleScrollseven);\r\n          referthirty.current.removeEventListener(\"scroll\", handleScrollthirty);\r\n          referolder.current.removeEventListener(\"scroll\", handleScrollolder);\r\n\r\n\r\n        }\r\n\r\n\r\n      };\r\n\r\n    }\r\n\r\n  });\r\n\r\n\r\n  // icon coloriser\r\n\r\n  const theme = createTheme({\r\n    palette: {\r\n      primary: red,\r\n    },\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    async function allreqgetter() {\r\n\r\n      const result = await fetch(`${url}/notif/allreqs/${curuser.usrn}`, {\r\n        credentials: 'include'\r\n      })\r\n\r\n      const data = await result.json();\r\n      setAllreqs(data);\r\n\r\n    }\r\n\r\n    allreqgetter();\r\n\r\n\r\n    async function initialtopseven() {\r\n\r\n      const result = await fetch(`${url}/notif/week/nextfive/${curuser.usrn}?skip=0`, {\r\n        credentials: 'include',\r\n      })\r\n\r\n      const data = await result.json();\r\n      let samplearr = [];\r\n\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (data[i].type != \"followreq\") {\r\n          samplearr.push(data[i]);\r\n        }\r\n      }\r\n\r\n      setNotifsevenarray(samplearr);\r\n      setSevenarray(data);\r\n\r\n    }\r\n\r\n    initialtopseven();\r\n\r\n    async function initialtopthirty() {\r\n\r\n      const result = await fetch(`${url}/notif/month/nextfive/${curuser.usrn}?skip=0`, {\r\n        credentials: 'include',\r\n      })\r\n\r\n      const data = await result.json();\r\n\r\n      let samplearr = [];\r\n\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (data[i].type != \"followreq\") {\r\n          samplearr.push(data[i]);\r\n        }\r\n      }\r\n\r\n      setNotifthirtyarray(samplearr);\r\n      setThirtyarray(data);\r\n\r\n    }\r\n\r\n    initialtopthirty();\r\n\r\n    async function initialtopolder() {\r\n\r\n      const result = await fetch(`${url}/notif/older/nextfive/${curuser.usrn}?skip=0`, {\r\n        credentials: 'include',\r\n      })\r\n\r\n      const data = await result.json();\r\n\r\n      let samplearr = [];\r\n\r\n      for (let i = 0; i < data.length; i++) {\r\n        if (data[i].type != \"followreq\") {\r\n          samplearr.push(data[i]);\r\n        }\r\n      }\r\n\r\n      setNotifolderarray(samplearr);\r\n      setOlderarray(data);\r\n    }\r\n\r\n    initialtopolder();\r\n\r\n    async function numofnotifs() {\r\n\r\n      const result = await fetch(`${url}/notif/new/${curuser.usrn}`, {\r\n        credentials: 'include',\r\n      })\r\n\r\n      const data = await result.json();\r\n      setNewnotifs(data.length);\r\n    }\r\n\r\n    numofnotifs();\r\n\r\n  }, [curuser])\r\n\r\n\r\n  const reqslider = () => {\r\n\r\n    setSlidedown(true);\r\n\r\n  }\r\n\r\n  const ddcloser = (e) => {\r\n\r\n    if (e != null) {\r\n      e.stopPropagation();\r\n    }\r\n\r\n    setDdcloseanim(true);\r\n    setTimeout(() => {\r\n      setDdcloseanim(false);\r\n    }, 600);\r\n    setTimeout(() => {\r\n      setSlidedown(false);\r\n    }, 400);\r\n\r\n  }\r\n\r\n  const postcreator = () => {\r\n\r\n    setIscreate(true);\r\n    setCursel('AddCircleIcon');\r\n\r\n  }\r\n\r\n  const slidenotifbar = () => {\r\n\r\n    if (theslide == false) {\r\n\r\n      setCursel('NotificationsNoneIcon');\r\n\r\n      async function clearer() {\r\n\r\n        const result = await fetch(`${url}/notif/allclear/${curuser.usrn}`, {\r\n          credentials: 'include'\r\n        })\r\n\r\n        const data = await result.json();\r\n\r\n        setNewnotifs((newnotifs) => newnotifs - data.len);\r\n\r\n        setTheslide(true);\r\n        firsttime.current = true;\r\n\r\n      }\r\n\r\n      clearer();\r\n\r\n    }\r\n\r\n\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    function isunslide(event) {\r\n      if (theslide) {\r\n\r\n        const unmatch = [\r\n          '.notifslider', '.notifslidernight', '.checkreqs', '.onefreqtextdropdown', '.reqdeleter', '.confirmbut',\r\n          '.eachreq', '.eachreqnight', '.notifs', '.notifspfp', '.notifspfpone', '.notifspfptwo', '.notifspfpdropdownup',\r\n          '.pfpsliderup', '.lastseven', '.followreqsexpand', '.onefreqtext', '.candidates', '.allreqsslider', '.allreqsslidermorethanthree', '.followreqs',\r\n          '.nofollowplus', '.nofreqstext', '.reqsandruler', '#notifactredcircle', '.notifacticon'\r\n        ]\r\n\r\n        let flag = false;\r\n\r\n        unmatch.map((each) => {\r\n          if (event.target.matches(each)) {\r\n            flag = true;\r\n          }\r\n        })\r\n\r\n        if (!flag) {\r\n          setTheslide(false);\r\n          setCursel(null);\r\n        }\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n    document.addEventListener(\"click\", isunslide);\r\n\r\n    return () => {\r\n      document.removeEventListener('click', isunslide);\r\n    }\r\n\r\n  })\r\n\r\n  const datedifffinder = (pastdate) => {\r\n\r\n\r\n    const type = pastdate.type;\r\n\r\n    if (pastdate.type == 'diff') {\r\n      pastdate = pastdate.date;\r\n    }\r\n\r\n    let cur = new Date();\r\n    let prev = new Date(pastdate);\r\n\r\n    const diff = (cur - prev);\r\n\r\n    const days = Math.floor(diff / 86400000);\r\n    const hours = Math.floor((diff % 86400000) / 3600000);\r\n    const minutes = Math.round(((diff % 86400000) % 3600000) / 60000);\r\n\r\n    if (days != 0) {\r\n      if (type == 'diff') {\r\n        if (days == 1) {\r\n          return `${days}d`\r\n        }\r\n        return `${days}d`\r\n      }\r\n      return `${days}d`;\r\n    } else if (hours != 0) {\r\n      if (type == 'diff') {\r\n        if (hours == 1) {\r\n          return `${days}h`\r\n        }\r\n        return `${hours}h`\r\n      }\r\n      return `${hours}h`;\r\n    } else {\r\n      if (type == 'diff') {\r\n        if (minutes == 1) {\r\n          return `${days}m`\r\n        }\r\n        return `${minutes}m`\r\n      }\r\n      return `${minutes}m`;\r\n    }\r\n  }\r\n\r\n\r\n  const goexplore = () => {\r\n\r\n    nav('/explore');\r\n    disp(leftpsets('ExploreIcon'));\r\n\r\n  }\r\n\r\n  const welcomeagain = () => {\r\n\r\n    nav('/welcome');\r\n    disp(leftpsets('HomeIcon'));\r\n\r\n  }\r\n\r\n  const profileviewer = (key) => {\r\n\r\n    disp(currview(key.from));\r\n    disp(notifvisit(!notifprofile));\r\n    nav(`/profile/${key.from}`);\r\n\r\n  }\r\n\r\n  const letfollow = (key) => {\r\n\r\n    async function clearer() {\r\n\r\n      const result = await fetch(`${url}/notif/clear/${curuser.usrn}/${key.from}`, {\r\n        credentials: 'include'\r\n      })\r\n\r\n      const data = await result.json();\r\n      setNewnotifs((newnotifs) => newnotifs - data.len);\r\n\r\n      const idx = allreqs.indexOf(key);\r\n      allreqs.splice(idx, 1);\r\n      setAllreqs([...allreqs]);\r\n\r\n\r\n      if (allreqs.length == 0) {\r\n        ddcloser(null);\r\n      }\r\n\r\n\r\n      const newnotif =\r\n      {\r\n        username: key.from,\r\n        pfp: key.frompfp,\r\n        fullname: key.fromfname,\r\n        type: \"followsyou\",\r\n        attachement: null,\r\n        commentifany: null,\r\n        reference: null\r\n      };\r\n\r\n      fetch(`${url}/notif/${curuser.usrn}`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': \"application/json\" },\r\n        body: JSON.stringify(newnotif),\r\n        credentials: 'include'\r\n      })\r\n\r\n      const newnotiftwo =\r\n      {\r\n        username: curuser.usrn,\r\n        pfp: curuser.pfp,\r\n        fullname: curuser.fullname,\r\n        type: \"accepted\",\r\n        attachement: null,\r\n        commentifany: null,\r\n        reference: null\r\n      };\r\n\r\n      fetch(`${url}/notif/${key.from}`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': \"application/json\" },\r\n        body: JSON.stringify(newnotiftwo),\r\n        credentials: 'include'\r\n      })\r\n\r\n\r\n      const delnotif =\r\n      {\r\n        username: key.from,\r\n        type: \"followreqdel\",\r\n\r\n      };\r\n\r\n      fetch(`${url}/notif/rem/${curuser.usrn}`, {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': \"application/json\" },\r\n        body: JSON.stringify(delnotif),\r\n        credentials: 'include'\r\n      })\r\n\r\n      let newobj = {\r\n        username: key.from,\r\n        pfp: key.frompfp,\r\n        fullname: key.fromfname\r\n      }\r\n\r\n      fetch(`${url}/users/accepted/${curuser.usrn}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': \"application/json\" },\r\n        body: JSON.stringify(newobj),\r\n        credentials: 'include'\r\n      })\r\n    }\r\n\r\n    clearer();\r\n\r\n  }\r\n\r\n  const dontletfollow = (key) => {\r\n\r\n\r\n    async function clearer() {\r\n\r\n      const result = await fetch(`${url}/notif/clear/${curuser.usrn}/${key.from}`, {\r\n        credentials: 'include'\r\n      })\r\n\r\n      const data = await result.json();\r\n      setNewnotifs((newnotifs) => newnotifs - data.len);\r\n\r\n      const idx = allreqs.indexOf(key);\r\n      allreqs.splice(idx, 1);\r\n      setAllreqs([...allreqs]);\r\n\r\n      if (allreqs.length == 0) {\r\n        ddcloser(null);\r\n      }\r\n\r\n      const delnotif =\r\n      {\r\n        username: key.from,\r\n        type: \"followreqdel\",\r\n\r\n      };\r\n\r\n      fetch(`${url}/notif/rem/${curuser.usrn}`, {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': \"application/json\" },\r\n        body: JSON.stringify(delnotif),\r\n        credentials: 'include'\r\n      })\r\n\r\n    }\r\n\r\n    clearer();\r\n\r\n  }\r\n\r\n  const userloggingout = () => {\r\n    setCursel('LogoutIcon');\r\n    setLogout(true);\r\n  }\r\n\r\n  const gotosettings = () => {\r\n    disp(leftpsets('SettingsIcon'));\r\n    nav(`/settings/${curuser.usrn}`);\r\n  }\r\n\r\n\r\n  window.onpopstate = e => {\r\n\r\n\r\n    let curloc = window.location.href;\r\n    let decider = curloc.substring(22);\r\n\r\n    if (decider[0] == 'e') {\r\n      disp(leftpsets('ExploreIcon'));\r\n    } else if (decider[0] == 'w') {\r\n      disp(leftpsets('HomeIcon'));\r\n    } else if (decider[0] == 's') {\r\n      disp(leftpsets('SettingsIcon'));\r\n    } else {\r\n      disp(leftpsets('ExploreIcon'));\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"leftbar\">\r\n\r\n        {iscreate && <Createmodal trigger={setIscreate} extra={setCursel} />}\r\n\r\n        {logout && <Yesnomodal trigger={setLogout} text={`Are you sure you want to `} bold={`Log out`} extra={{ purpose: \"logger\", setCursel }} />}\r\n        {firsttime.current && <div className={theslide ? themer ? 'notifslider' : \"notifslidernight\" : themer ? 'notifsliderrev' : \"notifsliderrevnight\"}>\r\n\r\n          <span className={themer ? 'headingslider' : 'headingslider leftpnight'}> Notifications</span>\r\n\r\n          <div className='reqsandruler'>\r\n\r\n            <div className={slidedown ? 'followreqsexpand' : themer ? \"followreqs\" : 'followreqs followreqsnight'} onClick={allreqs.length >= 1 ? reqslider : console.log('pass')}>\r\n\r\n              {\r\n\r\n                slidedown\r\n\r\n                  ?\r\n\r\n                  <div className={ddcloseanim ? allreqs.length <= 3 ? themer ? 'allreqssliderclosed' : 'allreqssliderclosed bgnight' : themer ? 'allreqsslidermorethanthreeclosed' : 'allreqsslidermorethanthreeclosed bgnight' : allreqs.length <= 3 ? themer ? 'allreqsslider' : \"allreqsslider bgnight\" : themer ? 'allreqsslidermorethanthree' : \"allreqsslidermorethanthree bgnight\"}>\r\n\r\n                    <button className={themer ? 'slideback' : 'slidebacknight leftpnight'} onClick={(e) => { ddcloser(e) }}> <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" className=\"w-6 h-6 chevup\">\r\n                      <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M4.5 12.75l7.5-7.5 7.5 7.5m-15 6l7.5-7.5 7.5 7.5\" />\r\n                    </svg>\r\n                    </button>\r\n\r\n\r\n\r\n                    {allreqs.map((each) => (\r\n\r\n                      <div className={themer ? 'eachreq' : 'eachreqnight'} key={each.from}>\r\n\r\n                        <div className={themer ? 'notifspfpdropdownup' : 'notifspfpdropdownup notifspfpdropdownupnight'} >\r\n                          <img src={each.frompfp} alt=\" \" className='pfpsliderup' ></img>\r\n                        </div>\r\n\r\n                        <span className={themer ? 'onefreqtextdropdown' : \"onefreqtextdropdown leftpnight\"}>{each.from}</span>\r\n                        <span className={each.fromfname.length < 10 ? 'candidatesdropdown' : 'candidatesdropdownlarge'}>{each.fromfname}. {datedifffinder(each.createdAt)}</span>\r\n\r\n                        <button className='confirmbut' onClick={() => { letfollow(each) }}>Confirm</button>\r\n                        <button className=\"reqdeleter\" onClick={() => { dontletfollow(each) }}>Delete</button>\r\n\r\n\r\n                      </div>\r\n\r\n                    ))}\r\n\r\n\r\n                  </div>\r\n\r\n\r\n\r\n                  :\r\n\r\n\r\n                  allreqs.length == 0\r\n\r\n                    ?\r\n\r\n                    <>\r\n\r\n                      <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" className={themer ? \"w-6 h-6 nofollowplus\" : \"w-6 h-6 nofollowplus leftpnight\"}>\r\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M19 7.5v3m0 0v3m0-3h3m-3 0h-3m-2.25-4.125a3.375 3.375 0 11-6.75 0 3.375 3.375 0 016.75 0zM4 19.235v-.11a6.375 6.375 0 0112.75 0v.109A12.318 12.318 0 0110.374 21c-2.331 0-4.512-.645-6.374-1.766z\" />\r\n                      </svg>\r\n\r\n                      <span className={themer ? 'nofreqstext' : \"nofreqstext leftpnight\"}>No New Follow Requests...</span>\r\n\r\n                    </>\r\n\r\n                    :\r\n\r\n                    allreqs.length == 1\r\n\r\n                      ?\r\n\r\n                      <div className='reqclicker'>\r\n\r\n                        <div className={themer ? 'notifspfp' : \"notifspfp notifspfpnight\"} >\r\n                          <img src={allreqs[0].frompfp} alt=\" \" className='pfpsliderupcoverone' ></img>\r\n\r\n                        </div>\r\n\r\n                        <span className={themer ? 'onefreqtext' : \"onefreqtext leftpnight\"}>Follow Request</span>\r\n                        <span className='candidates'>{allreqs[0].from}</span>\r\n\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" className={themer ? \"w-6 h-6 checkreqs\" : \"w-6 h-6 checkreqs leftpnight\"}>\r\n                          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M8.25 4.5l7.5 7.5-7.5 7.5\" />\r\n                        </svg>\r\n\r\n                      </div>\r\n\r\n\r\n                      :\r\n\r\n                      <>\r\n\r\n                        <div className={themer ? 'notifspfpone' : \"notifspfpone notifspfponenight\"}>\r\n\r\n                          <img src={allreqs[0].frompfp} alt=\" \" className='pfpsliderupcover' ></img>\r\n\r\n                        </div>\r\n\r\n                        <div className={themer ? 'notifspfptwo' : \" notifspfptwo notifspfptwonight\"}>\r\n\r\n                          <img src={allreqs[1].frompfp} alt=\" \" className='pfpsliderupcover' ></img>\r\n\r\n                        </div>\r\n\r\n                        <span className={themer ? 'onefreqtext' : 'onefreqtext leftpnight'}> Follow Requests</span>\r\n                        {\r\n\r\n                          allreqs.length == 2\r\n\r\n                            ?\r\n\r\n                            <span className='candidates'>{allreqs[0].from} and {allreqs[1].from}</span>\r\n\r\n                            :\r\n\r\n                            <span className='candidates'>{allreqs[0].from}, {allreqs[1].from} + {allreqs.length - 2} others</span>\r\n\r\n                        }\r\n\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" className={themer ? \"w-6 h-6 checkreqs\" : \"w-6 h-6 checkreqs leftpnight\"}>\r\n                          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M8.25 4.5l7.5 7.5-7.5 7.5\" />\r\n                        </svg>\r\n\r\n                      </>\r\n\r\n              }\r\n\r\n\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <span className={themer ? 'sevenheading' : 'sevenheading leftpnight'}>Last 7 days</span>\r\n\r\n          <div ref={referseven} className={sevenarray.length <= 3 ? themer ? 'lastsevenplus' : \"lastsevenplus bgnight\" : themer ? 'lastseven' : \"lastseven bgnight\"}>\r\n\r\n            {\r\n\r\n              notifsevenarray.length != 0\r\n\r\n                ?\r\n\r\n                sevenarray.map((each) => (\r\n\r\n                  <>\r\n\r\n                    <div className={each.type === 'storylike' ? themer ? 'generictemplate' : \"generictemplate bgnightshadow \" : 'hidd'} onClick={() => { profileviewer(each) }}>\r\n                      <div className={themer ? 'notifspfpdropdown' : \"notifspfpdropdown notifspfpdropdownnight\"}>\r\n                        <img src={each.frompfp} alt=\" \" className='pfpslider' ></img>\r\n                      </div>\r\n                      <span className={themer ? 'onefreqtextothers' : \"onefreqtextothers leftpnight\"}><b>{each.from} </b>liked your story.</span>\r\n                      <span className='candidatesdropdown'>{each.fromfname}&nbsp;&nbsp;&nbsp;{datedifffinder(each.createdAt)}</span>\r\n                    </div>\r\n\r\n\r\n                    < div className={each.type === 'commented' ? themer ? 'imgtemplate' : \"imgtemplate bgnightshadow \" : 'hidd'} onClick={() => { profileviewer(each) }}>\r\n                      <div className={themer ? 'notifspfpdropdown' : \"notifspfpdropdown notifspfpdropdownnight\"}>\r\n                        <img src={each.frompfp} alt=\" \" className='pfpslider' ></img>\r\n                      </div>\r\n                      <div className='textblockc'>\r\n                        <p className={themer ? 'thenotif' : \"thenotif leftpnight \"}><span><b>{each.from} </b> commented under your post: \"{each.commentifany}\".</span></p>\r\n                        <span className='candidatesdropdownc'>{each.fromfname}&nbsp;&nbsp;&nbsp;{datedifffinder(each.createdAt)}</span>\r\n                      </div>\r\n                      <img className='thepostinquestion' src={each.attachement} alt=\" \"></img>\r\n                    </div>\r\n\r\n\r\n                    <div className={each.type === 'accepted' ? themer ? 'imgtemplatereqac' : 'imgtemplatereqac bgnightshadow ' : 'hidd'} onClick={() => { profileviewer(each) }} >\r\n                      <div className={themer ? 'notifspfpdropdown' : \"notifspfpdropdown notifspfpdropdownnight\"}>\r\n                        <img src={each.frompfp} alt=\" \" className='pfpslider' ></img>\r\n                      </div>\r\n                      <div className='textblock'>\r\n                        <p className={themer ? 'thenotif' : \"thenotif leftpnight \"}><span><b>{each.from} </b>has accepted your follow request.</span></p>\r\n                        <span className='candidatesdropdownreqac'>{each.fromfname}&nbsp;&nbsp;&nbsp;{datedifffinder(each.createdAt)}</span>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                    <div className={each.type === 'followsyou' ? themer ? 'generictemplate' : \"generictemplate bgnightshadow\" : 'hidd'} onClick={() => { profileviewer(each) }} >\r\n                      <div className={themer ? 'notifspfpdropdown' : \"notifspfpdropdown notifspfpdropdownnight\"}>\r\n                        <img src={each.frompfp} alt=\" \" className='pfpslider' ></img>\r\n                      </div>\r\n\r\n                      <span className={themer ? 'onefreqtextothers' : \"onefreqtextothers leftpnight\"}> <b>{each.from} </b>follows you now.</span>\r\n                      <span className='candidatesdropdown'>{each.fromfname}&nbsp;&nbsp;&nbsp;{datedifffinder(each.createdAt)}</span>\r\n                    </div>\r\n\r\n\r\n                    <div className={each.type === 'postlike' ? themer ? 'imgtemplatereqac' : 'imgtemplatereqac bgnightshadow' : 'hidd'} onClick={() => { profileviewer(each) }}>\r\n                      <div className={themer ? 'notifspfpdropdown' : \"notifspfpdropdown notifspfpdropdownnight\"}>\r\n                        <img src={each.frompfp} alt=\" \" className='pfpslider' ></img>\r\n                      </div>\r\n\r\n                      <span className={themer ? 'onefreqtextothers' : \"onefreqtextothers leftpnight\"}><b>{each.from} </b> liked your post.</span>\r\n                      <span className='candidatesdropdown'>{each.fromfname}&nbsp;&nbsp;&nbsp;{datedifffinder(each.createdAt)}</span>\r\n                      <img className='thepostinquestion' src={each.attachement} alt=\" \"></img>\r\n                    </div>\r\n\r\n\r\n                    <div className={each.type === 'commentlike' ? themer ? 'imgtemplate' : 'imgtemplate bgnightshadow ' : 'hidd'} onClick={() => { profileviewer(each) }}>\r\n                      <div className={themer ? 'notifspfpdropdown' : \"notifspfpdropdown notifspfpdropdownnight\"}>\r\n                        <img src={each.frompfp} alt=\" \" className='pfpslider' ></img>\r\n                      </div>\r\n                      <div className='textblockc'>\r\n                        <p className={themer ? 'thenotif' : \"thenotif leftpnight \"}><span><b>{each.from} </b> liked your comment: \"{each.commentifany}\".</span></p>\r\n                        <span className='candidatesdropdownc'>{each.fromfname}&nbsp;&nbsp;&nbsp;{datedifffinder(each.createdAt)}</span>\r\n                      </div>\r\n                      <img className='thepostinquestion' src={each.attachement} alt=\" \"></img>\r\n                    </div>\r\n\r\n\r\n\r\n                  </>\r\n\r\n\r\n                ))\r\n\r\n                :\r\n\r\n                <div>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 crossbell\">\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M9.143 17.082a24.248 24.248 0 0 0 3.844.148m-3.844-.148a23.856 23.856 0 0 1-5.455-1.31 8.964 8.964 0 0 0 2.3-5.542m3.155 6.852a3 3 0 0 0 5.667 1.97m1.965-2.277L21 21m-4.225-4.225a23.81 23.81 0 0 0 3.536-1.003A8.967 8.967 0 0 1 18 9.75V9A6 6 0 0 0 6.53 6.53m10.245 10.245L6.53 6.53M3 3l3.53 3.53\" />\r\n                  </svg>\r\n                  <span className='crossbelltext'>no notifications</span>\r\n                </div>\r\n\r\n            }\r\n\r\n            {loaderseven && <div className='loadingiconnotifs'></div>}\r\n\r\n          </div>\r\n\r\n\r\n          <span className={themer ? 'thirtyheading' : 'thirtyheading leftpnight'}>Last 30 days</span>\r\n          <div ref={referthirty} className={thirtyarray.length <= 3 ? themer ? 'lastthirtyplus' : 'lastthirtyplus bgnight' : themer ? 'lastthirty' : \"lastthirty bgnight\"}>\r\n\r\n            {\r\n              notifthirtyarray.length != 0\r\n\r\n                ?\r\n\r\n                thirtyarray.map((each) => (\r\n\r\n                  <>\r\n\r\n                    <div className={each.type === 'storylike' ? themer ? 'generictemplate' : \"generictemplate bgnightshadow \" : 'hidd'} onClick={() => { profileviewer(each) }}>\r\n                      <div className={themer ? 'notifspfpdropdown' : \"notifspfpdropdown notifspfpdropdownnight\"}>\r\n                        <img src={each.frompfp} alt=\" \" className='pfpslider' ></img>\r\n                      </div>\r\n                      <span className={themer ? 'onefreqtextothers' : \"onefreqtextothers leftpnight\"}><b>{each.from} </b>liked your story.</span>\r\n                      <span className='candidatesdropdown'>{each.fromfname}&nbsp;&nbsp;&nbsp;{datedifffinder(each.createdAt)}</span>\r\n                    </div>\r\n\r\n\r\n                    < div className={each.type === 'commented' ? themer ? 'imgtemplate' : \"imgtemplate bgnightshadow \" : 'hidd'} onClick={() => { profileviewer(each) }}>\r\n                      <div className={themer ? 'notifspfpdropdown' : \"notifspfpdropdown notifspfpdropdownnight\"}>\r\n                        <img src={each.frompfp} alt=\" \" className='pfpslider' ></img>\r\n                      </div>\r\n                      <div className='textblockc'>\r\n                        <p className={themer ? 'thenotif' : \"thenotif leftpnight \"}><span><b>{each.from} </b> commented under your post: \"{each.commentifany}\".</span></p>\r\n                        <span className='candidatesdropdownc'>{each.fromfname}&nbsp;&nbsp;&nbsp;{datedifffinder(each.createdAt)}</span>\r\n                      </div>\r\n                      <img className='thepostinquestion' src={each.attachement} alt=\" \"></img>\r\n                    </div>\r\n\r\n\r\n                    <div className={each.type === 'accepted' ? themer ? 'imgtemplatereqac' : 'imgtemplatereqac bgnightshadow ' : 'hidd'} onClick={() => { profileviewer(each) }} >\r\n                      <div className={themer ? 'notifspfpdropdown' : \"notifspfpdropdown notifspfpdropdownnight\"}>\r\n                        <img src={each.frompfp} alt=\" \" className='pfpslider' ></img>\r\n                      </div>\r\n                      <div className='textblock'>\r\n                        <p className={themer ? 'thenotif' : \"thenotif leftpnight \"}><span><b>{each.from} </b>has accepted your follow request.</span></p>\r\n                        <span className='candidatesdropdownreqac'>{each.fromfname}&nbsp;&nbsp;&nbsp;{datedifffinder(each.createdAt)}</span>\r\n                      </div>\r\n                    </div>\r\n\r\n\r\n                    <div className={each.type === 'followsyou' ? themer ? 'generictemplate' : \"generictemplate bgnightshadow\" : 'hidd'} onClick={() => { profileviewer(each) }} >\r\n                      <div className={themer ? 'notifspfpdropdown' : \"notifspfpdropdown notifspfpdropdownnight\"}>\r\n                        <img src={each.frompfp} alt=\" \" className='pfpslider' ></img>\r\n                      </div>\r\n\r\n                      <span className={themer ? 'onefreqtextothers' : \"onefreqtextothers leftpnight\"}> <b>{each.from} </b>follows you now.</span>\r\n                      <span className='candidatesdropdown'>{each.fromfname}&nbsp;&nbsp;&nbsp;{datedifffinder(each.createdAt)}</span>\r\n                    </div>\r\n\r\n\r\n                    <div className={each.type === 'postlike' ? themer ? 'imgtemplatereqac' : 'imgtemplatereqac bgnightshadow' : 'hidd'} onClick={() => { profileviewer(each) }}>\r\n                      <div className={themer ? 'notifspfpdropdown' : \"notifspfpdropdown notifspfpdropdownnight\"}>\r\n                        <img src={each.frompfp} alt=\" \" className='pfpslider' ></img>\r\n                      </div>\r\n\r\n                      <span className={themer ? 'onefreqtextothers' : \"onefreqtextothers leftpnight\"}><b>{each.from} </b> liked your post.</span>\r\n                      <span className='candidatesdropdown'>{each.fromfname}&nbsp;&nbsp;&nbsp;{datedifffinder(each.createdAt)}</span>\r\n                      <img className='thepostinquestion' src={each.attachement} alt=\" \"></img>\r\n                    </div>\r\n\r\n\r\n                    <div className={each.type === 'commentlike' ? themer ? 'imgtemplate' : 'imgtemplate bgnightshadow ' : 'hidd'} onClick={() => { profileviewer(each) }}>\r\n                      <div className={themer ? 'notifspfpdropdown' : \"notifspfpdropdown notifspfpdropdownnight\"}>\r\n                        <img src={each.frompfp} alt=\" \" className='pfpslider' ></img>\r\n                      </div>\r\n                      <div className='textblockc'>\r\n                        <p className={themer ? 'thenotif' : \"thenotif leftpnight \"}><span><b>{each.from} </b> liked your comment: \"{each.commentifany}\".</span></p>\r\n                        <span className='candidatesdropdownc'>{each.fromfname}&nbsp;&nbsp;&nbsp;{datedifffinder(each.createdAt)}</span>\r\n                      </div>\r\n                      <img className='thepostinquestion' src={each.attachement} alt=\" \"></img>\r\n                    </div>\r\n\r\n\r\n\r\n                  </>\r\n\r\n\r\n                ))\r\n\r\n\r\n                :\r\n\r\n                <div>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 crossbell\">\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M9.143 17.082a24.248 24.248 0 0 0 3.844.148m-3.844-.148a23.856 23.856 0 0 1-5.455-1.31 8.964 8.964 0 0 0 2.3-5.542m3.155 6.852a3 3 0 0 0 5.667 1.97m1.965-2.277L21 21m-4.225-4.225a23.81 23.81 0 0 0 3.536-1.003A8.967 8.967 0 0 1 18 9.75V9A6 6 0 0 0 6.53 6.53m10.245 10.245L6.53 6.53M3 3l3.53 3.53\" />\r\n                  </svg>\r\n                  <span className='crossbelltext'>no notifications</span>\r\n                </div>\r\n\r\n            }\r\n\r\n\r\n            {loaderthirty && <div className='loadingiconnotifs'></div>}\r\n\r\n          </div>\r\n\r\n          <span className={themer ? 'olderhead' : 'olderhead leftpnight '}>older</span>\r\n          <div ref={referolder} className={olderarray.length <= 3 ? themer ? 'oldernotifsplus' : 'oldernotifsplus bgnight' : themer ? 'oldernotifs' : 'oldernotifs bgnight'}>\r\n\r\n            {\r\n              notifolderarray.length != 0\r\n\r\n                ?\r\n\r\n                olderarray.map((each) => (\r\n\r\n                  <>\r\n\r\n                    <div className={each.type === 'storylike' ? themer ? 'generictemplate' : \"generictemplate bgnightshadow \" : 'hidd'} onClick={() => { profileviewer(each) }}>\r\n                      <div className={themer ? 'notifspfpdropdown' : \"notifspfpdropdown notifspfpdropdownnight\"}>\r\n                        <img src={each.frompfp} alt=\" \" className='pfpslider' ></img>\r\n                      </div>\r\n                      <span className={themer ? 'onefreqtextothers' : \"onefreqtextothers leftpnight\"}><b>{each.from} </b>liked your story.</span>\r\n                      <span className='candidatesdropdown'>{each.fromfname}&nbsp;&nbsp;&nbsp;{datedifffinder(each.createdAt)}</span>\r\n                    </div>\r\n\r\n\r\n                    < div className={each.type === 'commented' ? themer ? 'imgtemplate' : \"imgtemplate bgnightshadow \" : 'hidd'} onClick={() => { profileviewer(each) }}>\r\n                      <div className={themer ? 'notifspfpdropdown' : \"notifspfpdropdown notifspfpdropdownnight\"}>\r\n                        <img src={each.frompfp} alt=\" \" className='pfpslider' ></img>\r\n                      </div>\r\n                      <div className='textblockc'>\r\n                        <p className={themer ? 'thenotif' : \"thenotif leftpnight \"}><span><b>{each.from} </b> commented under your post: \"{each.commentifany}\".</span></p>\r\n                        <span className='candidatesdropdownc'>{each.fromfname}&nbsp;&nbsp;&nbsp;{datedifffinder(each.createdAt)}</span>\r\n                      </div>\r\n                      <img className='thepostinquestion' src={each.attachement} alt=\" \"></img>\r\n                    </div>\r\n\r\n\r\n                    <div className={each.type === 'accepted' ? themer ? 'imgtemplatereqac' : 'imgtemplatereqac bgnightshadow ' : 'hidd'} onClick={() => { profileviewer(each) }} >\r\n                      <div className={themer ? 'notifspfpdropdown' : \"notifspfpdropdown notifspfpdropdownnight\"}>\r\n                        <img src={each.frompfp} alt=\" \" className='pfpslider' ></img>\r\n                      </div>\r\n                      <div className='textblock'>\r\n                        <p className={themer ? 'thenotif' : \"thenotif leftpnight \"}><span><b>{each.from} </b>has accepted your follow request.</span></p>\r\n                        <span className='candidatesdropdownreqac'>{each.fromfname}&nbsp;&nbsp;&nbsp;{datedifffinder(each.createdAt)}</span>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className={each.type === 'followsyou' ? themer ? 'generictemplate' : \"generictemplate bgnightshadow\" : 'hidd'} onClick={() => { profileviewer(each) }} >\r\n                      <div className={themer ? 'notifspfpdropdown' : \"notifspfpdropdown notifspfpdropdownnight\"}>\r\n                        <img src={each.frompfp} alt=\" \" className='pfpslider' ></img>\r\n                      </div>\r\n\r\n                      <span className={themer ? 'onefreqtextothers' : \"onefreqtextothers leftpnight\"}> <b>{each.from} </b>follows you now.</span>\r\n                      <span className='candidatesdropdown'>{each.fromfname}&nbsp;&nbsp;&nbsp;{datedifffinder(each.createdAt)}</span>\r\n                    </div>\r\n\r\n\r\n                    <div className={each.type === 'postlike' ? themer ? 'imgtemplatereqac' : 'imgtemplatereqac bgnightshadow' : 'hidd'} onClick={() => { profileviewer(each) }}>\r\n                      <div className={themer ? 'notifspfpdropdown' : \"notifspfpdropdown notifspfpdropdownnight\"}>\r\n                        <img src={each.frompfp} alt=\" \" className='pfpslider' ></img>\r\n                      </div>\r\n\r\n                      <span className={themer ? 'onefreqtextothers' : \"onefreqtextothers leftpnight\"}><b>{each.from} </b> liked your post.</span>\r\n                      <span className='candidatesdropdown'>{each.fromfname}&nbsp;&nbsp;&nbsp;{datedifffinder(each.createdAt)}</span>\r\n                      <img className='thepostinquestion' src={each.attachement} alt=\" \"></img>\r\n                    </div>\r\n\r\n\r\n                    <div className={each.type === 'commentlike' ? themer ? 'imgtemplate' : 'imgtemplate bgnightshadow ' : 'hidd'} onClick={() => { profileviewer(each) }}>\r\n                      <div className={themer ? 'notifspfpdropdown' : \"notifspfpdropdown notifspfpdropdownnight\"}>\r\n                        <img src={each.frompfp} alt=\" \" className='pfpslider' ></img>\r\n                      </div>\r\n                      <div className='textblockc'>\r\n                        <p className={themer ? 'thenotif' : \"thenotif leftpnight \"}><span><b>{each.from} </b> liked your comment: \"{each.commentifany}\".</span></p>\r\n                        <span className='candidatesdropdownc'>{each.fromfname}&nbsp;&nbsp;&nbsp;{datedifffinder(each.createdAt)}</span>\r\n                      </div>\r\n                      <img className='thepostinquestion' src={each.attachement} alt=\" \"></img>\r\n                    </div>\r\n\r\n\r\n\r\n                  </>\r\n\r\n\r\n                ))\r\n\r\n                :\r\n\r\n                <div>\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" class=\"w-6 h-6 crossbell\">\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M9.143 17.082a24.248 24.248 0 0 0 3.844.148m-3.844-.148a23.856 23.856 0 0 1-5.455-1.31 8.964 8.964 0 0 0 2.3-5.542m3.155 6.852a3 3 0 0 0 5.667 1.97m1.965-2.277L21 21m-4.225-4.225a23.81 23.81 0 0 0 3.536-1.003A8.967 8.967 0 0 1 18 9.75V9A6 6 0 0 0 6.53 6.53m10.245 10.245L6.53 6.53M3 3l3.53 3.53\" />\r\n                  </svg>\r\n                  <span className='crossbelltext'>no notifications</span>\r\n                </div>\r\n\r\n            }\r\n\r\n            {loaderolder && <div className='loadingiconnotifs'></div>}\r\n\r\n          </div>\r\n\r\n        </div>}\r\n\r\n        <ul>\r\n          <li className={(cursel == 'AddCircleIcon' || cursel == 'NotificationsNoneIcon' || cursel == 'LogoutIcon') ? 'leftpainitem' : currentselect == 'HomeIcon' ? 'selectedcurrently leftpainitem' : 'leftpainitem '} >\r\n            <div className={themer ? \"activitypair\" : \"activitypair activitypairnight\"} onClick={welcomeagain}>\r\n              <HomeIcon className={themer ? 'activityicons' : \"activityicons leftpnight\"} fontSize='large' />\r\n              <span className={themer ? 'activityname' : \"activityname leftpnight\"}>Home</span>\r\n            </div>\r\n          </li>\r\n\r\n          <li className={(cursel == 'AddCircleIcon' || cursel == 'NotificationsNoneIcon' || cursel == 'LogoutIcon') ? 'leftpainitem' : currentselect == 'ExploreIcon' ? 'selectedcurrently leftpainitem' : 'leftpainitem '}>\r\n            <div className={themer ? \"activitypair\" : \"activitypair activitypairnight\"} onClick={goexplore}>\r\n              <ExploreIcon className={themer ? 'activityicons' : 'activityicons leftpnight'} fontSize='large' />\r\n              <span className={themer ? 'activityname' : \"activityname leftpnight\"}>Explore</span>\r\n            </div>\r\n          </li>\r\n\r\n          <li className={cursel == 'AddCircleIcon' ? 'selectedcurrently leftpainitem' : 'leftpainitem '}>\r\n            <div className={themer ? \"activitypair\" : \"activitypair activitypairnight\"} onClick={postcreator}>\r\n              <AddCircleIcon className={themer ? 'activityicons' : \"activityicons leftpnight\"} fontSize='large' ></AddCircleIcon>\r\n              <span className={themer ? 'activityname' : \"activityname leftpnight\"}>Create</span>\r\n            </div>\r\n          </li>\r\n\r\n          <li className={cursel == 'NotificationsNoneIcon' ? 'selectedcurrently leftpainitem' : 'leftpainitem '}>\r\n            <div id=\"notifact\" className={themer ? \"activitypair\" : \"activitypair activitypairnight\"} onClick={slidenotifbar}>\r\n\r\n              {newnotifs > 0 &&\r\n                <>\r\n                  <ThemeProvider theme={theme}>\r\n                    {isnotif && <CircleIcon id=\"notifactredcircle\" className={parent != 'explore' ? \"fornotifs\" : \"fornotifsresize\"} color=\"primary\" fontSize='medium'></CircleIcon>}\r\n                  </ThemeProvider>\r\n                  {isnotif && <span id=\"notifactval\" className={notifsval < 10 ? parent != 'explore' ? \"counternotifs\" : \"counternotifsresize\" : parent != 'explore' ? \"counternotifsdouble\" : \"counternotifsdoubleresize\"} >{newnotifs}</span>}\r\n                </>\r\n              }\r\n\r\n              <button id='notifacticon' ><NotificationsNoneIcon className={themer ? 'activityicons' : 'activityicons leftpnight'} fontSize='large' /></button>\r\n              <span className={themer ? 'activityname' : \"activityname leftpnight\"}>Notifications</span>\r\n            </div>\r\n          </li>\r\n\r\n          <li className={cursel == 'LogoutIcon' ? 'selectedcurrently leftpainitem' : 'leftpainitem '}>\r\n            <div className={themer ? \"activitypair\" : \"activitypair activitypairnight\"} onClick={userloggingout}>\r\n              <LogoutIcon className={themer ? 'activityiconslg' : 'activityiconslg leftpnight'} fontSize='large' />\r\n              <span className={themer ? 'activityname' : \"activityname leftpnight\"}>Log Out</span>\r\n            </div>\r\n          </li>\r\n\r\n          <li className={(cursel == 'AddCircleIcon' || cursel == 'NotificationsNoneIcon' || cursel == 'LogoutIcon') ? 'leftpainitem' : currentselect == 'SettingsIcon' ? 'selectedcurrently leftpainitem' : 'leftpainitem '}>\r\n            <div className={themer ? \"activitypair\" : \"activitypair activitypairnight\"} onClick={gotosettings}>\r\n              <SettingsIcon className={themer ? 'activityiconslg' : 'activityiconslg leftpnight'} fontSize='large' />\r\n              <span className={themer ? 'activityname' : \"activityname leftpnight\"}>Settings</span>\r\n            </div>\r\n          </li>\r\n\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Leftpain;","import ReactDom from 'react-dom';\r\nimport '../../corecss/createpostmodal.css';\r\nimport { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Loadingmodal from './loadingmodal';\r\nimport { useDispatch } from 'react-redux';\r\nimport { newpostadded } from '../../features/newpost';\r\n\r\n\r\n\r\nconst Createmodal = ({ trigger, extra }) => {\r\n\r\n    let curuser = useSelector((state) => { return state.youryr.value });\r\n    let newpost = useSelector((state) => { return state.newpostadder.value });\r\n    let theme = useSelector((state) => { return state.themeyr.value });\r\n\r\n    const disp = useDispatch();\r\n\r\n    let [sample, setSample] = useState(false);\r\n    let [loader, setLoader] = useState(false);\r\n    let [selectanother, setSelectanother] = useState(false);\r\n    let [postvis, setPostvis] = useState(false);\r\n    let [extensionerror, setExtensionerror] = useState(false);\r\n    let [failure, setFailure] = useState(true);\r\n    let [data, setData] = useState({\r\n        capt: null,\r\n        thepost: null\r\n    })\r\n\r\n    let url = \"http://localhost:3001\";\r\n    //let url = \"https://social-media-app-backend-final.onrender.com\";\r\n\r\n    function resizeBase64Img(base64, newWidth, newHeight) {\r\n        return new Promise((resolve, reject) => {\r\n            const canvas = document.createElement(\"canvas\");\r\n            canvas.width = newWidth;\r\n            canvas.height = newHeight;\r\n            let context = canvas.getContext(\"2d\");\r\n            let img = document.createElement(\"img\");\r\n            img.src = base64;\r\n            img.onload = function () {\r\n                context.scale(newWidth / img.width, newHeight / img.height);\r\n                context.drawImage(img, 0, 0);\r\n                resolve(canvas.toDataURL());\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    const closemodal = () => {\r\n        trigger(false);\r\n        if (extra != null) {\r\n            extra(null);\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const creator = async (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        const finaldata = data;\r\n        finaldata.userid = curuser.userid;\r\n        finaldata.username = curuser.usrn;\r\n        finaldata.pfp = curuser.pfp;\r\n\r\n        const result = await fetch(`${url}/posts/create`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': \"application/json\" },\r\n            body: JSON.stringify(finaldata),\r\n            credentials: 'include'\r\n        })\r\n\r\n\r\n        const datareal = await result.json();\r\n\r\n        if (datareal === 'compression required') {\r\n\r\n            const secondresult = await resizeBase64Img(finaldata.thepost, 3200, 3200);\r\n\r\n            let newobj = {\r\n                capt: finaldata.capt,\r\n                thepost: secondresult,\r\n                userid: curuser.userid,\r\n                username: curuser.usrn,\r\n                pfp: curuser.pfp\r\n            }\r\n\r\n            const thirdresult = await fetch(`${url}/posts/create`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': \"application/json\" },\r\n                body: JSON.stringify(newobj),\r\n                credentials: 'include'\r\n            })\r\n\r\n\r\n            const redo = await thirdresult.json();\r\n\r\n            if (redo === 'compression required') {\r\n\r\n                setSelectanother(true);\r\n                setTimeout(() => {\r\n                    setSelectanother(false);\r\n                }, 2000)\r\n\r\n\r\n            } else {\r\n                setLoader(true);\r\n\r\n                setTimeout(() => {\r\n\r\n                    trigger(false);\r\n                    if (extra != null) {\r\n                        extra(null);\r\n                    }\r\n\r\n                    setLoader(false);\r\n                    disp(newpostadded(!newpost));\r\n\r\n\r\n                }, 3000)\r\n            }\r\n\r\n        } else {\r\n\r\n            setLoader(true);\r\n\r\n            setTimeout(() => {\r\n\r\n                trigger(false);\r\n                if (extra != null) {\r\n                    extra(null);\r\n                }\r\n\r\n                setLoader(false);\r\n                disp(newpostadded(!newpost));\r\n\r\n\r\n            }, 3000)\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    const changesetter = (e) => {\r\n        let type = e.target.name;\r\n        let val = e.target.value;\r\n\r\n        setData({ ...data, [type]: val });\r\n        setSample(!sample);\r\n\r\n    }\r\n\r\n    const imgupload = (e) => {\r\n\r\n\r\n        if (e.target.files[0] != undefined) {\r\n            setSample(!sample);\r\n            const reader = new FileReader();\r\n\r\n            let datatype = e.target.files[0].name.split('.').pop();\r\n            if (datatype != 'jpg' && datatype != 'jpeg' && datatype != 'png' && datatype != 'webp') {\r\n\r\n                setFailure(false);\r\n                setExtensionerror(true);\r\n                setPostvis(false);\r\n\r\n                setTimeout(() => {\r\n                    setExtensionerror(false);\r\n                }, 5000);\r\n\r\n\r\n                return;\r\n            } else {\r\n                setFailure(true);\r\n            }\r\n\r\n            reader.readAsDataURL(e.target.files[0]);\r\n            reader.onload = () => {\r\n                setData({ ...data, thepost: reader.result });\r\n            }\r\n\r\n            reader.onerror = error => {\r\n                console.log(error);\r\n            }\r\n\r\n            setPostvis(true);\r\n\r\n        }\r\n    }\r\n\r\n\r\n    return ReactDom.createPortal(\r\n        <>\r\n\r\n            {loader && <Loadingmodal trigger={setLoader} />}\r\n            <div className='blurremainc'></div>\r\n\r\n            <div className={postvis ? theme ? 'createformbig' : \"createformbig nightbgpost\" : theme ? 'createform' : \"createform nightbgpost \"}>\r\n\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" className={theme ? \"w-6 h-6 cancelpost\" : \"w-6 h-6 cancelpost nighttextpost\"} onClick={closemodal} >\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\r\n                </svg>\r\n\r\n                <h1 className={theme ? 'postheading' : \"postheading nighttextpost\"}>create a post</h1>\r\n                <form id='form'>\r\n\r\n                    <input name='capt' id={theme ? 'capt' : \"captnight\"} placeholder=\"enter caption here...\" onChange={(e) => { changesetter(e) }} />\r\n                    <div className=\"input-group\">\r\n                        <div className={theme ? 'hider' : \"hider hidernight\"}>\r\n                            choose an image\r\n                            <input id='files' onChange={(e) => { imgupload(e) }} name='thepost' type=\"file\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {selectanother && <span className=\"fallbackimgred\">please select a smaller image</span>}\r\n                    {extensionerror && <span className=\"wrongextensionred\">please select .jpg , .jpeg , .png or .webp files only</span>}\r\n                    {failure && data.thepost && <button className=\"submit\" onClick={(e) => { creator(e) }}>post</button>}\r\n                </form>\r\n            </div>\r\n\r\n        </>\r\n\r\n        , document.getElementById('portal')\r\n    );\r\n}\r\n\r\nexport default Createmodal;","import ReactDom from 'react-dom';\r\nimport { Ring } from '@uiball/loaders'\r\nimport '../../corecss/loadingmodal.css';\r\n\r\nconst Loadingmodal = ({trigger}) => {\r\n\r\n\r\n    return ReactDom.createPortal(  \r\n        <>\r\n            <div className='blurremainload'></div>\r\n            <div className='loadring'><Ring size={40} lineWeight={5} speed={2} color=\"white\"/></div>\r\n        </>\r\n\r\n        , document.getElementById('portal')\r\n    );\r\n}\r\n \r\nexport default Loadingmodal;","import ReactDom from 'react-dom';\r\nimport '../../corecss/yesno.css';\r\nimport Loadingmodal from './loadingmodal';\r\nimport { useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { useSelector } from \"react-redux\";\r\nimport { loadersets } from '../../features/loader.js'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { clearfollowunfollow } from '../../features/followunfollow.js';\r\nimport { clearsettings } from '../../features/forsettings.js';\r\nimport { cleariconreset } from '../../features/iconreseter.js';\r\nimport { clearleftp } from '../../features/leftp.js';\r\nimport { clearloader } from '../../features/loader.js';\r\nimport { clearnextreqprof } from '../../features/nextreqprofile.js';\r\nimport { clearnextreq } from '../../features/nextrequested.js';\r\nimport { clearnotif } from '../../features/notifvisit.js';\r\nimport { clearprof } from '../../features/profile.js';\r\nimport { clearstory } from '../../features/story.js';\r\nimport { clearstorydat } from '../../features/storydata.js';\r\nimport { clearyourdets } from '../../features/you.js';\r\nimport { clearnewpost } from '../../features/newpost.js';\r\nimport { cleartheme } from '../../features/theme.js';\r\n\r\nconst Yesnomodal = ({ trigger, text, bold, extra }) => {\r\n\r\n  let [loader, setLoader] = useState(false);\r\n  let theme = useSelector((state) => { return state.themeyr.value });\r\n\r\n  let nav = useNavigate();\r\n  const disp = useDispatch();\r\n\r\n   let url = \"http://localhost:3001\";\r\n   //let url = \"https://social-media-app-backend-final.onrender.com\";\r\n\r\n  const closemodal = () => {\r\n\r\n    if (extra.purpose == \"logger\") {\r\n\r\n      extra.setCursel(null);\r\n    }\r\n\r\n    if (extra.purpose != \"newconv\") {\r\n      trigger(false);\r\n    } else {\r\n\r\n      trigger({});\r\n    }\r\n\r\n  }\r\n\r\n  const purpose = () => {\r\n\r\n\r\n    if (extra.purpose == 'newconv') {\r\n      extra.startconvhandler(extra.main);\r\n      extra.setOnlchatclicked(!extra.skeletonidentity);\r\n      trigger({});\r\n    }\r\n\r\n    if (extra.purpose == \"cancelreq\") {\r\n\r\n\r\n      fetch(`${url}/users/followcancel/${extra.viewperson}`, {\r\n        method: 'PUT',\r\n        headers: { 'Content-Type': \"application/json\" },\r\n        body: JSON.stringify({ \"username\": extra.curuser.usrn }),\r\n        credentials: 'include'\r\n      })\r\n\r\n      extra.setAsktofollow(false);\r\n\r\n      trigger(false);\r\n\r\n      const delnotif =\r\n      {\r\n        username: extra.curuser.usrn,\r\n        type: \"followreqdel\",\r\n\r\n      };\r\n\r\n      fetch(`${url}/notif/rem/${extra.viewperson}`, {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': \"application/json\" },\r\n        body: JSON.stringify(delnotif),\r\n        credentials: 'include'\r\n      })\r\n\r\n    }\r\n\r\n    if (extra.purpose == 'delpost') {\r\n\r\n      let newobj = {\r\n        username: extra.curuser.usrn\r\n      }\r\n\r\n      fetch(`${url}/posts/delete/${extra.thepost._id}`, {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': \"application/json\" },\r\n        body: JSON.stringify(newobj),\r\n        credentials: 'include'\r\n      })\r\n\r\n      fetch(`${url}/notif/postdel/${extra.thepost._id}`, {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': \"application/json\" },\r\n        body: JSON.stringify({ name: 'user' }),\r\n        credentials: 'include'\r\n      })\r\n\r\n      setLoader(true);\r\n      setTimeout(() => {\r\n        setLoader(false);\r\n        trigger(false);\r\n        extra.setDelsuccess(true);\r\n      }, 3000);\r\n\r\n    }\r\n\r\n    if (extra.purpose == 'logger') {\r\n\r\n      setLoader(true);\r\n      setTimeout(() => {\r\n        setLoader(false);\r\n        trigger(false);\r\n\r\n        fetch(`${url}/logout`, {\r\n          credentials: 'include',\r\n        })\r\n\r\n        disp(loadersets(false));\r\n        nav('/', { replace: true });\r\n\r\n      }, 3000);\r\n\r\n      setTimeout(() => {\r\n\r\n        disp(clearfollowunfollow(true));\r\n        disp(clearsettings(true));\r\n        disp(cleariconreset(true));\r\n        disp(clearleftp(true));\r\n        disp(clearloader(true));\r\n        disp(clearnextreqprof(true));\r\n        disp(clearnextreq(true));\r\n        disp(clearnotif(true));\r\n        disp(clearprof(true));\r\n        disp(clearstory(true));\r\n        disp(clearstorydat(true));\r\n        disp(clearyourdets(true));\r\n        disp(clearnewpost(true));\r\n        disp(cleartheme(true));\r\n\r\n      }, 5000)\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return ReactDom.createPortal(\r\n    <>\r\n\r\n\r\n      <div className='blurremainy'></div>\r\n\r\n      {loader && <Loadingmodal />}\r\n\r\n      {!loader && <div className={theme ? 'yesnomodal' : \"yesnomodal yesnomodalnight\"}>\r\n\r\n        {\r\n          extra.purpose == 'newconv'\r\n\r\n            ?\r\n\r\n            <span className={theme ? 'thetextnewconv' : \"thetextnewconv nighttextyesno\"}>{text} <b>{bold}</b> ?</span>\r\n\r\n            :\r\n\r\n            extra.purpose == 'delpost'\r\n\r\n              ?\r\n\r\n              <span className={theme ? 'thetextdel' : \"thetextdel nighttextyesno \"}><b>{bold}</b> {text} ?</span>\r\n\r\n              :\r\n\r\n              extra.purpose == 'logger'\r\n\r\n                ?\r\n\r\n                <span className={theme ? 'thetextlogout' : \"thetextlogout nighttextyesno \"}>{text} <b>{bold}</b> ?</span>\r\n\r\n                :\r\n\r\n                <span className={theme ? 'thetext' : \"thetext nighttextyesno \"}>{text} <b>{bold}</b> ?</span>\r\n\r\n        }\r\n\r\n        <div className={theme ? 'nobutdiv' : 'nobutdiv nobutdivnight'} onClick={closemodal}>\r\n          <button className={theme ? 'nobut' : \"nobut nighttextyesno\"}>NO</button>\r\n        </div>\r\n\r\n        <div className={theme ? 'yesbutdiv' : \"yesbutdiv yesbutdivnight\"} onClick={purpose}>\r\n          <button className={theme ? 'yesbut' : 'yesbut nighttextyesno'}  >YES</button>\r\n        </div>\r\n      </div>}\r\n    </>\r\n\r\n    , document.getElementById('portal')\r\n  );\r\n\r\n}\r\n\r\nexport default Yesnomodal;\r\n\r\n\r\n","import \"../corecss/welcomepage.css\";\r\nimport React from 'react'\r\n\r\n\r\nconst Shimmer = ()=>{\r\n    return (\r\n        <div className='shimmer-wrap'>\r\n            <div className='shimmer'></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Shimmer;"],"names":["_ref","caller","extra","curuser","useSelector","state","youryr","value","themer","themeyr","ismsg","setIsmsg","useState","textval","setTextval","newmessages","setNewmessages","nav","useNavigate","disp","useDispatch","useEffect","async","result","fetch","concat","userid","credentials","data","json","undefined","convs","trutharray","Object","values","unread","counter","i","length","newchats","theme","createTheme","palette","primary","red","changetheme","themeselector","_jsxs","className","children","_jsx","width","height","viewBox","fill","xmlns","d","_Fragment","ThemeProvider","CircleIcon","color","fontSize","SendIcon","onClick","msgsopener","iconresets","DarkModeIcon","LightModeIcon","pfp","src","alt","currview","usrn","current","setPersonsdets","Shimmer","parent","isnotif","setIsnotif","notifsval","setNotifsval","slidedown","setSlidedown","ddcloseanim","setDdcloseanim","theslide","setTheslide","iscreate","setIscreate","allreqs","setAllreqs","newnotifs","setNewnotifs","skipvalseven","setSkipvalseven","loaderseven","setLoaderseven","sevenarray","setSevenarray","skipvalthirty","setSkipvalthirty","loaderthirty","setLoaderthirty","thirtyarray","setThirtyarray","skipvalolder","setSkipvalolder","loaderolder","setLoaderolder","olderarray","setOlderarray","currentselect","setCurrentselect","selectedleftp","cursel","setCursel","logout","setLogout","notifsevenarray","setNotifsevenarray","notifthirtyarray","setNotifthirtyarray","notifolderarray","setNotifolderarray","ismessagesclicked","iconresetyr","notifprofile","notifprofilevisit","referseven","useRef","doublstopperseven","scrollstopperseven","lastloaderseven","referthirty","doublstopperthirty","scrollstopperthirty","lastloaderthirty","referolder","doublstopperolder","scrollstopperolder","lastloaderolder","firsttime","url","leftpsets","fetchDataseven","useCallback","fetchDatathirty","fetchDataolder","handleScrollseven","Math","abs","scrollHeight","clientHeight","scrollTop","setTimeout","handleScrollthirty","handleScrollolder","addEventListener","removeEventListener","allreqgetter","samplearr","type","push","initialtopseven","initialtopthirty","initialtopolder","numofnotifs","ddcloser","e","stopPropagation","isunslide","event","flag","map","each","target","matches","document","datedifffinder","pastdate","date","diff","Date","days","floor","hours","minutes","round","profileviewer","key","from","notifvisit","window","onpopstate","decider","location","href","substring","Createmodal","trigger","Yesnomodal","text","bold","purpose","reqslider","console","log","stroke","frompfp","fromfname","createdAt","len","idx","indexOf","splice","newnotif","username","fullname","attachement","commentifany","reference","method","headers","body","JSON","stringify","newnotiftwo","delnotif","newobj","clearer","ref","class","welcomeagain","HomeIcon","goexplore","ExploreIcon","postcreator","AddCircleIcon","id","slidenotifbar","NotificationsNoneIcon","userloggingout","LogoutIcon","gotosettings","SettingsIcon","newpost","newpostadder","sample","setSample","loader","setLoader","selectanother","setSelectanother","postvis","setPostvis","extensionerror","setExtensionerror","failure","setFailure","setData","capt","thepost","creator","preventDefault","finaldata","secondresult","base64","newWidth","newHeight","Promise","resolve","reject","canvas","createElement","context","getContext","img","onload","scale","drawImage","toDataURL","thirdresult","newpostadded","ReactDom","Loadingmodal","closemodal","name","placeholder","onChange","val","changesetter","files","reader","FileReader","datatype","split","pop","readAsDataURL","onerror","error","imgupload","getElementById","Ring","size","lineWeight","speed","startconvhandler","main","setOnlchatclicked","skeletonidentity","viewperson","setAsktofollow","_id","setDelsuccess","loadersets","replace","clearfollowunfollow","clearsettings","cleariconreset","clearleftp","clearloader","clearnextreqprof","clearnextreq","clearnotif","clearprof","clearstory","clearstorydat","clearyourdets","clearnewpost","cleartheme"],"sourceRoot":""}