{"version":3,"file":"static/js/917.52b25256.chunk.js","mappings":"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","sources":["components/modals/postpopup.js","components/sharing.js","components/homepagefeed.js","components/sidepain.js","components/modals/createstorymodal.js","components/welcomepage.js"],"sourcesContent":["import ReactDom from 'react-dom';\r\nimport '../../corecss/postpopup.css';\r\nimport { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Yesnomodal from './yesnomodal';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { nextrequested } from '../../features/nextrequested';\r\nimport { nextprofimgrequested } from '../../features/nextreqprofile';\r\nimport { currview } from '../../features/profile';\r\n\r\nconst Postpopup = ({ hider, trigger, data, comheartobj, type, extra }) => {\r\n\r\n    let curuser = useSelector((state) => { return state.youryr.value });\r\n    let theme = useSelector((state) => { return state.themeyr.value });\r\n\r\n    let disp = useDispatch();\r\n    let nav = useNavigate();\r\n\r\n    let [postliked, setPostliked] = useState(data.isliked != undefined ? data.isliked : data.likes.map((each) => each.username).includes(curuser.usrn));\r\n    let [curlikestate, setCurlikestate] = useState(data.likesnum);\r\n    let [commentlikestate, setCommentlikestate] = useState(commentobj);\r\n    let [commentred, setCommentred] = useState({});\r\n    let [curcomment, setCurcomment] = useState(null);\r\n    let [openyesno, setOpenyesno] = useState(false);\r\n    let [delsuccess, setDelsuccess] = useState(false);\r\n\r\n    let url = \"http://localhost:3001\";\r\n    //let url = \"https://social-media-app-backend-final.onrender.com\";\r\n\r\n    let commentobj = {};\r\n\r\n    data.comments.map((each) => {\r\n        commentobj[each._id] = each.numlikes;\r\n    })\r\n\r\n    const closemodal = () => {\r\n        trigger(false);\r\n    }\r\n\r\n    const nextplease = () => {\r\n        trigger(false);\r\n        if (type == 'explore') {\r\n            disp(nextrequested(true));\r\n        } else if (type == 'profile') {\r\n            disp(nextprofimgrequested(true));\r\n        }\r\n    }\r\n\r\n    const prevplease = () => {\r\n        trigger(false);\r\n        if (type == 'explore') {\r\n            disp(nextrequested(false));\r\n        } else if (type == 'profile') {\r\n            disp(nextprofimgrequested(false));\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const datedifffinder = (pastdate) => {\r\n\r\n\r\n        const type = pastdate.type;\r\n\r\n        if (pastdate.type == 'diff') {\r\n            pastdate = pastdate.date;\r\n        }\r\n\r\n        let cur = new Date();\r\n\r\n        let prev = new Date(pastdate);\r\n\r\n        const diff = (cur - prev);\r\n\r\n        const days = Math.floor(diff / 86400000);\r\n        const hours = Math.floor((diff % 86400000) / 3600000);\r\n        const minutes = Math.round(((diff % 86400000) % 3600000) / 60000);\r\n\r\n\r\n        if (days != 0) {\r\n            if (type == 'diff') {\r\n                if (days == 1) {\r\n                    return `${days} DAY`\r\n                }\r\n                return `${days} DAYS`\r\n            }\r\n            return `${days}d`;\r\n        } else if (hours != 0) {\r\n            if (type == 'diff') {\r\n                if (hours == 1) {\r\n                    return `${days} HOUR`\r\n                }\r\n                return `${hours} HOURS`\r\n            }\r\n            return `${hours}h`;\r\n        } else {\r\n            if (type == 'diff') {\r\n                if (minutes == 1) {\r\n                    return `${days} MINUTE`\r\n                }\r\n                return `${minutes} MINUTES`\r\n            }\r\n            return `${minutes}m`;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    const likethepost = () => {\r\n\r\n\r\n        setPostliked(!postliked);\r\n\r\n        let newobj = {\r\n            username: curuser.usrn,\r\n            pfp: curuser.pfp,\r\n            fullname: curuser.fullname\r\n        }\r\n\r\n\r\n        if (!postliked) {\r\n\r\n            setCurlikestate(curlikestate + 1);\r\n\r\n            fetch(`${url}/posts/liked/${data._id}`, {\r\n                method: 'PATCH',\r\n                headers: { 'Content-Type': \"application/json\" },\r\n                body: JSON.stringify(newobj),\r\n                credentials: 'include'\r\n            })\r\n\r\n            const newnotif =\r\n            {\r\n                username: curuser.usrn,\r\n                type: \"postlike\",\r\n                attachement: data.img,\r\n                commentifany: null,\r\n                pfp: curuser.pfp,\r\n                fullname: curuser.fullname,\r\n                reference: data._id\r\n\r\n            };\r\n\r\n            fetch(`${url}/notif/${data.username}`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': \"application/json\" },\r\n                body: JSON.stringify(newnotif),\r\n                credentials: 'include'\r\n            })\r\n\r\n\r\n            if (type == 'explore') {\r\n\r\n                data.likes.push(newobj);\r\n                data.likesnum += 1;\r\n\r\n            }\r\n\r\n\r\n            if (type == 'homepage') {\r\n\r\n\r\n                extra.action[0][data._id]++;\r\n                extra.actionperformer[0](extra.action[0]);\r\n\r\n                let newobj = {\r\n                    username: curuser.usrn,\r\n                    pfp: curuser.pfp,\r\n                    fullname: curuser.fullname\r\n                }\r\n\r\n                data.likes.push(newobj);\r\n                data.likesnum += 1;\r\n\r\n\r\n                extra.action[1][data._id] = true;\r\n                extra.actionperformer[1](extra.action[1]);\r\n\r\n\r\n            }\r\n\r\n\r\n        } else {\r\n\r\n            setCurlikestate(curlikestate - 1);\r\n\r\n            fetch(`${url}/posts/unliked/${data._id}`, {\r\n                method: 'PATCH',\r\n                headers: { 'Content-Type': \"application/json\" },\r\n                body: JSON.stringify(newobj),\r\n                credentials: 'include'\r\n            })\r\n\r\n            const delnotif =\r\n            {\r\n                username: curuser.usrn,\r\n                type: \"postlikedel\",\r\n                attachement: data.img,\r\n            };\r\n\r\n            fetch(`${url}/notif/rem/${data.username}`, {\r\n                method: 'DELETE',\r\n                headers: { 'Content-Type': \"application/json\" },\r\n                body: JSON.stringify(delnotif),\r\n                credentials: 'include'\r\n            })\r\n\r\n            if (type == 'explore') {\r\n\r\n                let newlikes = data.likes.filter((each) => each.username != curuser.usrn);\r\n                data.likes = newlikes;\r\n\r\n                data.likesnum -= 1;\r\n\r\n            }\r\n\r\n            if (type == 'homepage') {\r\n\r\n\r\n                extra.action[0][data._id]--;\r\n                extra.actionperformer[0](extra.action[0]);\r\n\r\n                let newlikes = data.likes.filter((each) => each.username != curuser.usrn);\r\n                data.likes = newlikes;\r\n\r\n                data.likesnum -= 1;\r\n\r\n\r\n                extra.action[1][data._id] = false;\r\n                extra.actionperformer[1](extra.action[1]);\r\n\r\n\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const commentliked = (key) => {\r\n\r\n        if (commentred[key._id] || comheartobj[key._id]) {\r\n\r\n\r\n            if (type == 'homepage' || type == \"explore\") {\r\n\r\n                comheartobj[key._id] = false;\r\n\r\n\r\n                const onevalarray = data.comments.filter((each) => each._id == key._id);\r\n                onevalarray[0].numlikes -= 1;\r\n\r\n            }\r\n\r\n            setCommentred({ ...commentred, [key._id]: false });\r\n            commentlikestate[key._id]--;\r\n            setCommentlikestate(commentlikestate);\r\n\r\n\r\n            let newobj = {\r\n\r\n                liker: curuser.usrn,\r\n                commenter: key.username,\r\n                commentid: key._id\r\n\r\n            }\r\n\r\n            fetch(`${url}/posts/commentunlike/${data._id}`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': \"application/json\" },\r\n                body: JSON.stringify(newobj),\r\n                credentials: 'include'\r\n            })\r\n\r\n            const delnotif =\r\n            {\r\n                username: curuser.usrn,\r\n                type: \"commentlikedel\",\r\n                attachement: data.img,\r\n                commentifany: key.thecomment\r\n            };\r\n\r\n            fetch(`${url}/notif/rem/${key.username}`, {\r\n                method: 'DELETE',\r\n                headers: { 'Content-Type': \"application/json\" },\r\n                body: JSON.stringify(delnotif),\r\n                credentials: 'include'\r\n            })\r\n\r\n        } else {\r\n\r\n\r\n            if (type == 'homepage' || type == \"explore\") {\r\n\r\n                comheartobj[key._id] = true;\r\n\r\n\r\n                const onevalarray = data.comments.filter((each) => each._id == key._id);\r\n                onevalarray[0].numlikes += 1;\r\n\r\n            }\r\n\r\n\r\n\r\n            setCommentred({ ...commentred, [key._id]: true });\r\n            commentlikestate[key._id]++;\r\n            setCommentlikestate(commentlikestate);\r\n\r\n            let newobj = {\r\n\r\n                liker: curuser.usrn,\r\n                commenter: key.username,\r\n                commentid: key._id\r\n\r\n            }\r\n\r\n            fetch(`${url}/posts/commentlike/${data._id}`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': \"application/json\" },\r\n                body: JSON.stringify(newobj),\r\n                credentials: 'include'\r\n            })\r\n\r\n            const newnotif =\r\n            {\r\n                username: curuser.usrn,\r\n                pfp: curuser.pfp,\r\n                fullname: curuser.fullname,\r\n                type: \"commentlike\",\r\n                attachement: data.img,\r\n                commentifany: key.thecomment,\r\n                reference: data._id\r\n            };\r\n\r\n            fetch(`${url}/notif/${key.username}`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': \"application/json\" },\r\n                body: JSON.stringify(newnotif),\r\n                credentials: 'include'\r\n            })\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const capturechange = (e) => {\r\n        setCurcomment(e.target.value);\r\n    }\r\n\r\n\r\n    const commentsender = async (e) => {\r\n\r\n\r\n        if (type == 'homepage') {\r\n\r\n            extra.action[2][data._id]++;\r\n            extra.actionperformer[2](extra.action[2]);\r\n\r\n        }\r\n\r\n        let newid = uuidv4()\r\n\r\n        const newcomment = {\r\n            username: curuser.usrn,\r\n            pfp: curuser.pfp,\r\n            thecomment: curcomment,\r\n            _id: newid\r\n        }\r\n\r\n        if (type == 'homepage') {\r\n\r\n            data.comments.unshift({\r\n                username: curuser.usrn,\r\n                pfp: curuser.pfp,\r\n                thecomment: curcomment,\r\n                _id: newid,\r\n                timeposted: new Date(),\r\n                numlikes: 0,\r\n                likes: [],\r\n            })\r\n\r\n            commentlikestate[newid] = 0;\r\n            setCommentlikestate(commentlikestate);\r\n\r\n        }\r\n\r\n        if (type == 'explore' || type == 'profile') {\r\n\r\n            data.comments.unshift({\r\n                username: curuser.usrn,\r\n                pfp: curuser.pfp,\r\n                thecomment: curcomment,\r\n                _id: newid,\r\n                timeposted: new Date(),\r\n                numlikes: 0,\r\n                likes: [],\r\n            })\r\n\r\n        }\r\n\r\n        await fetch(`${url}/posts/addcomment/${data._id}`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': \"application/json\" },\r\n            body: JSON.stringify(newcomment),\r\n            credentials: 'include'\r\n        })\r\n\r\n        setCurcomment(\"\");\r\n        let newnotif = {\r\n            username: curuser.usrn,\r\n            pfp: curuser.pfp,\r\n            fullname: curuser.fullname,\r\n            type: 'commented',\r\n            attachement: data.img,\r\n            commentifany: curcomment,\r\n            reference: data._id\r\n        }\r\n\r\n        await fetch(`${url}/notif/${data.username}`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': \"application/json\" },\r\n            body: JSON.stringify(newnotif),\r\n            credentials: 'include'\r\n        })\r\n\r\n\r\n    }\r\n\r\n    const deletepost = () => {\r\n\r\n        setOpenyesno(true);\r\n\r\n\r\n    }\r\n\r\n    if (delsuccess) {\r\n        trigger(false);\r\n        extra.deleter(false);\r\n    }\r\n\r\n\r\n    const profileviewer = (username) => {\r\n\r\n        disp(currview(username));\r\n        nav(`/profile/${username}`);\r\n\r\n    }\r\n\r\n    return ReactDom.createPortal(\r\n        <>\r\n\r\n\r\n            <div className='blurremain'></div>\r\n\r\n            {(hider == \"leftlim\" || hider == true) && <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-arrow-right-circle-fill rightmover\" viewBox=\"0 0 16 16\" onClick={nextplease}>\r\n                <path d=\"M8 0a8 8 0 1 1 0 16A8 8 0 0 1 8 0zM4.5 7.5a.5.5 0 0 0 0 1h5.793l-2.147 2.146a.5.5 0 0 0 .708.708l3-3a.5.5 0 0 0 0-.708l-3-3a.5.5 0 1 0-.708.708L10.293 7.5H4.5z\" />\r\n            </svg>}\r\n            {(hider == \"rightlim\" || hider == true) && <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-arrow-left-circle-fill leftmover\" viewBox=\"0 0 16 16\" onClick={prevplease}>\r\n                <path d=\"M8 0a8 8 0 1 0 0 16A8 8 0 0 0 8 0zm3.5 7.5a.5.5 0 0 1 0 1H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5H11.5z\" />\r\n            </svg>}\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-x undopopup\" viewBox=\"0 0 16 16\" onClick={closemodal}>\r\n                <path d=\"M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z\" />\r\n            </svg>\r\n\r\n            {openyesno && <Yesnomodal trigger={setOpenyesno} text={'this post'} bold={'Delete'} extra={{ purpose: \"delpost\", thepost: data, curuser, setDelsuccess }} />}\r\n\r\n            <div className='postmodal'>\r\n                <div className='postsection'>\r\n                    <img src={data.img} alt=\" \" className='bigpost'></img>\r\n                </div>\r\n                <div className={theme ? 'postdetssection' : \"postdetssection postdetssectionnight\"}>\r\n\r\n                    <div className=\"listdiv\">\r\n                        <span className={theme ? \"listusername\" : \"listusername nighttextpost\"} onClick={() => { profileviewer(data.username) }}>{data.username}</span>\r\n\r\n                        <img className=\"listpfp\" src={data.pfp} onClick={() => { profileviewer(data.username) }} ></img>\r\n\r\n                        {curuser.usrn == data.username && <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" strokeWidth={1.5} stroke=\"currentColor\" className=\"w-6 h-6 delpost\" onClick={deletepost}>\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\" />\r\n                        </svg>\r\n                        }\r\n\r\n                    </div>\r\n\r\n                    <hr className='viewpostruler'></hr>\r\n\r\n                    <div className='secuserinp'>\r\n\r\n                        <div className='commentsection'>\r\n\r\n                            <ul className=\"allcomments\">\r\n                                <li className=\"eachcomment\">\r\n                                    <div className='uppercom'>\r\n\r\n\r\n                                        <img className=\"compfp\" src={data.pfp} onClick={() => { profileviewer(data.username) }}></img>\r\n\r\n                                        <div className='onlycom'>\r\n                                            <p className={theme ? \"comandusername\" : \"comandusername nighttextpost\"} onClick={() => { profileviewer(data.username) }}><span> <b>{data.username}</b> {data.desc}</span></p>\r\n                                            <div className='likeandtime'>\r\n                                                <span className='whenpostedbyuser'>{datedifffinder(data.createdAt)}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </li>\r\n\r\n\r\n\r\n\r\n                                {data.comments.map((each) => (\r\n\r\n                                    <li className=\"eachcomment\" key={each._id}>\r\n                                        <div className='uppercom'>\r\n                                            <img className=\"compfp\" src={each.pfp} onClick={() => { profileviewer(each.username) }}></img>\r\n\r\n                                            <div className='onlycom'>\r\n                                                <p className={theme ? \"comandusername\" : \"comandusername nighttextpost\"} onClick={() => { profileviewer(each.username) }} ><span> <b>{each.username} </b>{each.thecomment}</span></p>\r\n                                                <div className='likeandtime'>\r\n\r\n                                                    {\r\n                                                        commentlikestate[each._id] == 1\r\n                                                            ?\r\n                                                            <span className='comlike'>{commentlikestate[each._id]} like</span>\r\n                                                            :\r\n                                                            <span className='comlike'>{commentlikestate[each._id]} likes</span>\r\n                                                    }\r\n\r\n                                                    <span className='whenposted'>{datedifffinder(each.timeposted)}</span>\r\n                                                </div>\r\n                                            </div>\r\n\r\n\r\n                                            <div className='heartdiv'>\r\n\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" className={comheartobj[each._id] ? \"w-6 h-6 comlikerred\" : commentred[each._id] ? \"w-6 h-6 comlikerred\" : theme ? \"w-6 h-6 comliker\" : \"w-6 h-6 comliker comlikernight\"} onClick={() => { commentliked(each) }}>\r\n                                                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12z\" />\r\n                                                </svg>\r\n\r\n                                            </div>\r\n                                        </div>\r\n\r\n\r\n\r\n                                    </li>\r\n\r\n                                ))}\r\n\r\n                            </ul>\r\n                        </div>\r\n\r\n\r\n                        <div className={theme ? 'yourinput' : 'yourinput yourinputnight'}>\r\n\r\n                            <hr className='inpruler'></hr>\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" className={postliked ? \"w-6 h-6 comlikerinpred\" : theme ? \"w-6 h-6 comlikerinp\" : \"w-6 h-6 comlikerinp comlikerinpnight\"} onClick={likethepost}>\r\n                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M21 8.25c0-2.485-2.099-4.5-4.688-4.5-1.935 0-3.597 1.126-4.312 2.733-.715-1.607-2.377-2.733-4.313-2.733C5.1 3.75 3 5.765 3 8.25c0 7.22 9 12 9 12s9-4.78 9-12z\" />\r\n                            </svg>\r\n\r\n                            {\r\n                                curlikestate == 1\r\n                                    ?\r\n                                    <span className={theme ? 'likecounterpopup' : \"likecounterpopup nighttextpost\"}>{curlikestate} like</span>\r\n                                    :\r\n                                    <span className={theme ? 'likecounterpopup' : \"likecounterpopup nighttextpost\"}>{curlikestate} likes</span>\r\n                            }\r\n\r\n                            <span className='timeagopopup'>{datedifffinder({ date: data.createdAt, type: 'diff' })} AGO</span>\r\n                            <hr className='inprulertwo'></hr>\r\n                            <input type='text' value={curcomment} placeholder='Add a comment...' className={theme ? 'commentadderpopup' : \"commentadderpopup commentadderpopupnight\"} onChange={(e) => { capturechange(e) }} />\r\n                            <button className='commentpostbut' onClick={(e) => { commentsender(e) }}>POST</button>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n        , document.getElementById('portal')\r\n    );\r\n}\r\n\r\nexport default Postpopup;","import \"../corecss/homepagefeed.css\";\r\nimport \"../corecss/welcomepage.css\";\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport AddCommentIcon from '@mui/icons-material/AddComment';\r\nimport TelegramIcon from '@mui/icons-material/Telegram';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { red } from '@mui/material/colors';\r\nimport { useEffect, useState, useRef, useCallback } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport dateFormat from \"dateformat\";\r\nimport Postpopup from \"./modals/postpopup\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { followunfollowobj } from \"../features/followunfollow\";\r\nimport { currview } from '../features/profile';\r\n\r\n\r\nconst Share = ({ refer }) => {\r\n\r\n\r\n\r\n    let samplee = useSelector((state) => { return state.followyr.value });\r\n    let themer = useSelector((state) => { return state.themeyr.value });\r\n    let curuser = useSelector((state) => { return state.youryr.value });\r\n\r\n    let disp = useDispatch();\r\n    let nav = useNavigate();\r\n\r\n    let url = \"http://localhost:3001\";\r\n    //let url = \"https://social-media-app-backend-final.onrender.com\";\r\n\r\n    useEffect(() => {\r\n\r\n        setIsrequested(samplee.isrequested);\r\n        setCancelreq(samplee.cancelreq);\r\n\r\n    }, [samplee])\r\n\r\n    let [following, setFollowing] = useState({});\r\n    let [wannacomment, setWannacomment] = useState({});\r\n    let [isrequested, setIsrequested] = useState({});\r\n    let [cancelreq, setCancelreq] = useState({});\r\n    let [sample, setSample] = useState(false);\r\n    let [currentposts, setCurrentposts] = useState([]);\r\n    let [skipval, setSkipval] = useState(7);\r\n    let [loader, setLoader] = useState(null);\r\n    let [curlikestate, setCurlikestate] = useState({});\r\n    let [postlikestate, setPostlikestate] = useState({});\r\n    let [alreadystate, setAlreadystate] = useState({});\r\n    let [bigopen, setBigopen] = useState(null);\r\n    let [curcomment, setCurcomment] = useState({});\r\n    let [commentnumstate, setCommentnumstate] = useState({});\r\n    let [pusher, setPusher] = useState(null);\r\n\r\n    let commentheartobj = useRef({});\r\n    let whichone = useRef(null);\r\n    let doublstopper = useRef(1);\r\n    let scrollstopper = useRef(1);\r\n    let lastloader = useRef(1);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        async function initialtop() {\r\n\r\n            const result = await fetch(`${url}/posts/nextseven/${curuser.usrn}?skip=0`, {\r\n                credentials: 'include',\r\n            })\r\n\r\n            const data = await result.json();\r\n            const redobj = {};\r\n            const already = {};\r\n            const numofcom = {};\r\n\r\n\r\n            data.map((each) => {\r\n\r\n                curuser.following.map((eachlet) => {\r\n                    if (eachlet == each.userid) {\r\n                        setFollowing((prev) => ({ ...prev, [each.userid]: true }));\r\n                    }\r\n                })\r\n\r\n                redobj[each._id] = each.likesnum;\r\n                if (each.likes.map((eachlet) => eachlet.username).includes(curuser.usrn)) {\r\n                    already[each._id] = true;\r\n                }\r\n\r\n                commentheartobj.current[each._id] = {};\r\n                each.comments.map((eachlet) => {\r\n\r\n                    if (eachlet.likes.includes((curuser.usrn))) {\r\n                        commentheartobj.current[each._id][eachlet._id] = true;\r\n                    }\r\n\r\n                })\r\n\r\n                numofcom[each._id] = each.comments.length;\r\n\r\n            })\r\n\r\n            setCurlikestate({ ...curlikestate, ...redobj });\r\n            setAlreadystate({ ...alreadystate, ...already });\r\n            setCommentnumstate({ ...commentnumstate, ...numofcom });\r\n\r\n\r\n            for (let i = data.length - 1; i > 0; i--) {\r\n                const j = Math.floor(Math.random() * (i + 1));\r\n                [data[i], data[j]] = [data[j], data[i]];\r\n            }\r\n\r\n            setCurrentposts(data);\r\n\r\n        }\r\n\r\n        initialtop();\r\n\r\n    }, [])\r\n\r\n    const fetchData = useCallback(async () => {\r\n\r\n        const result = await fetch(`${url}/posts/nextseven/${curuser.usrn}?skip=${skipval}`, {\r\n            credentials: 'include',\r\n        })\r\n\r\n        const data = await result.json();\r\n\r\n        const redobj = {};\r\n        const already = {};\r\n        const numofcom = {};\r\n\r\n        data.map((each) => {\r\n\r\n            curuser.following.map((eachlet) => {\r\n                if (eachlet == each.userid) {\r\n                    setFollowing((prev) => ({ ...prev, [each.userid]: true }));\r\n                }\r\n            })\r\n\r\n            redobj[each._id] = each.likesnum;\r\n            if (each.likes.map((eachlet) => eachlet.username).includes(curuser.usrn)) {\r\n                already[each._id] = true;\r\n            }\r\n\r\n            commentheartobj.current[each._id] = {};\r\n\r\n            each.comments.map((eachlet) => {\r\n\r\n                if (eachlet.likes.includes((curuser.usrn))) {\r\n                    commentheartobj.current[each._id][eachlet._id] = true;\r\n                }\r\n\r\n            })\r\n\r\n            numofcom[each._id] = each.comments.length;\r\n\r\n        })\r\n\r\n        setCurlikestate((curlikestate) => {\r\n            return { ...curlikestate, ...redobj }\r\n        });\r\n        setAlreadystate((alreadystate) => {\r\n            return { ...alreadystate, ...already }\r\n        });\r\n        setCommentnumstate((commentnumstate) => {\r\n            return { ...commentnumstate, ...numofcom }\r\n        })\r\n\r\n        if (data.length == 0) {\r\n            setLoader(false);\r\n        }\r\n\r\n        scrollstopper.current = data.length;\r\n        function shuffler(data) {\r\n\r\n            for (let i = data.length - 1; i > 0; i--) {\r\n                const j = Math.floor(Math.random() * (i + 1));\r\n                [data[i], data[j]] = [data[j], data[i]];\r\n            }\r\n\r\n\r\n        }\r\n\r\n        shuffler(data);\r\n        setCurrentposts((currentposts) => [...currentposts, ...data]);\r\n\r\n        setSkipval((skipval) => skipval + 7);\r\n        setLoader(false);\r\n        doublstopper.current = 1;\r\n\r\n    }, [loader]);\r\n\r\n    useEffect(() => {\r\n\r\n        const handleScroll = () => {\r\n\r\n            if (doublstopper.current == 1) {\r\n\r\n                if (Math.abs(refer.scrollHeight - refer.clientHeight - refer.scrollTop) < 1) {\r\n                    if (scrollstopper.current != 0) {\r\n\r\n                        fetchData();\r\n                        setLoader(true);\r\n                        doublstopper.current = 0;\r\n\r\n                    }\r\n                    if (scrollstopper.current == 0) {\r\n\r\n                        if (lastloader.current) {\r\n\r\n                            setLoader(true);\r\n                            lastloader.current = 0;\r\n                            setTimeout(() => {\r\n                                setLoader(false);\r\n                            }, 3000);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        };\r\n\r\n\r\n        if (refer != null) {\r\n\r\n\r\n            refer.addEventListener(\"scroll\", handleScroll);\r\n            return () => {\r\n                refer.removeEventListener(\"scroll\", handleScroll);\r\n            };\r\n\r\n        }\r\n\r\n\r\n    });\r\n\r\n\r\n\r\n    // const theme = createTheme({\r\n    //     palette: {\r\n    //         primary: {\r\n    //             main: '#fafafa',\r\n    //         },\r\n    //         secondary: red\r\n    //     },\r\n    // });\r\n\r\n    const followtry = (each) => {\r\n\r\n        fetch(`${url}/users/follow/${each.username}`, {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': \"application/json\" },\r\n            body: JSON.stringify({ \"username\": curuser.usrn }),\r\n            credentials: 'include'\r\n        })\r\n\r\n\r\n        const newnotif =\r\n        {\r\n            username: curuser.usrn,\r\n            type: \"followreq\",\r\n            attachement: null,\r\n            commentifany: null,\r\n            pfp: curuser.pfp,\r\n            fullname: curuser.fullname,\r\n            reference: null\r\n\r\n        };\r\n\r\n        fetch(`${url}/notif/${each.username}`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': \"application/json\" },\r\n            body: JSON.stringify(newnotif),\r\n            credentials: 'include'\r\n        })\r\n\r\n        setIsrequested((prev) => ({ ...prev, [each.userid]: true }));\r\n        setCancelreq((prev) => ({ ...prev, [each.userid]: true }));\r\n\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        disp(followunfollowobj({ isrequested: isrequested, cancelreq: cancelreq }));\r\n\r\n    }, [isrequested])\r\n\r\n    const requested = (each) => {\r\n\r\n\r\n        const delnotif =\r\n        {\r\n            username: curuser.usrn,\r\n            type: \"followreqdel\",\r\n\r\n        };\r\n\r\n        fetch(`${url}/notif/rem/${each.username}`, {\r\n            method: 'DELETE',\r\n            headers: { 'Content-Type': \"application/json\" },\r\n            body: JSON.stringify(delnotif),\r\n            credentials: 'include'\r\n        })\r\n\r\n\r\n        fetch(`${url}/users/followcancel/${each.username}`, {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': \"application/json\" },\r\n            body: JSON.stringify({ \"username\": curuser.usrn }),\r\n            credentials: 'include'\r\n        })\r\n\r\n\r\n        setIsrequested((prev) => ({ ...prev, [each.userid]: false }));\r\n        setCancelreq((prev) => ({ ...prev, [each.userid]: false }));\r\n\r\n    }\r\n\r\n\r\n    const postliked = (key) => {\r\n\r\n\r\n\r\n        let newobj = {\r\n            username: curuser.usrn,\r\n            pfp: curuser.pfp,\r\n            fullname: curuser.fullname\r\n        }\r\n\r\n        key.likes.push(newobj);\r\n        key.likesnum += 1;\r\n\r\n        if (postlikestate[key._id] || alreadystate[key._id]) {\r\n\r\n\r\n            curlikestate[key._id]--;\r\n            setCurlikestate(curlikestate);\r\n\r\n            alreadystate[key._id] = false;\r\n            setAlreadystate(alreadystate);\r\n\r\n            setPostlikestate({ ...postlikestate, [key._id]: false })\r\n\r\n            fetch(`${url}/posts/unliked/${key._id}`, {\r\n                method: 'PATCH',\r\n                headers: { 'Content-Type': \"application/json\" },\r\n                body: JSON.stringify(newobj),\r\n                credentials: 'include'\r\n            })\r\n\r\n            const delnotif =\r\n            {\r\n                username: curuser.usrn,\r\n                type: \"postlikedel\",\r\n                attachement: key.img,\r\n            };\r\n\r\n            fetch(`${url}/notif/rem/${key.username}`, {\r\n                method: 'DELETE',\r\n                headers: { 'Content-Type': \"application/json\" },\r\n                body: JSON.stringify(delnotif),\r\n                credentials: 'include'\r\n            })\r\n\r\n        } else {\r\n\r\n            curlikestate[key._id]++;\r\n            setCurlikestate(curlikestate);\r\n            setPostlikestate({ ...postlikestate, [key._id]: true })\r\n\r\n            fetch(`${url}/posts/liked/${key._id}`, {\r\n                method: 'PATCH',\r\n                headers: { 'Content-Type': \"application/json\" },\r\n                body: JSON.stringify(newobj),\r\n                credentials: 'include'\r\n            })\r\n\r\n            const newnotif =\r\n            {\r\n                username: curuser.usrn,\r\n                type: \"postlike\",\r\n                attachement: key.img,\r\n                commentifany: null,\r\n                pfp: curuser.pfp,\r\n                fullname: curuser.fullname,\r\n                reference: key._id\r\n\r\n            };\r\n\r\n            fetch(`${url}/notif/${key.username}`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': \"application/json\" },\r\n                body: JSON.stringify(newnotif),\r\n                credentials: 'include'\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const popup = (key) => {\r\n\r\n        setBigopen(true);\r\n        whichone.current = { post: key, postid: key._id };\r\n    }\r\n\r\n    const capturechange = (e, key) => {\r\n        curcomment[key] = e.target.value;\r\n        setCurcomment({ ...curcomment });\r\n    }\r\n\r\n\r\n    const makecomment = (key) => {\r\n        wannacomment[key] = true;\r\n        setWannacomment({ ...wannacomment });\r\n    }\r\n\r\n\r\n    const commentsender = async (key) => {\r\n\r\n        let newid = uuidv4();\r\n\r\n        const newcomment = {\r\n            username: curuser.usrn,\r\n            pfp: curuser.pfp,\r\n            thecomment: curcomment[key._id],\r\n            _id: newid\r\n        }\r\n\r\n        key.comments.unshift({\r\n            likes: [],\r\n            numlikes: 0,\r\n            pfp: curuser.pfp,\r\n            thecomment: curcomment[key._id],\r\n            timeposted: new Date(),\r\n            username: curuser.usrn,\r\n            _id: newid\r\n        })\r\n\r\n\r\n        await fetch(`${url}/posts/addcomment/${key._id}`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': \"application/json\" },\r\n            body: JSON.stringify(newcomment),\r\n            credentials: 'include'\r\n        })\r\n\r\n        let newnotif = {\r\n            username: curuser.usrn,\r\n            pfp: curuser.pfp,\r\n            fullname: curuser.fullname,\r\n            type: 'commented',\r\n            attachement: key.img,\r\n            commentifany: curcomment[key._id],\r\n            reference: key._id\r\n        }\r\n\r\n        curcomment[key._id] = \"\";\r\n        setCurcomment({ ...curcomment });\r\n        commentnumstate[key._id] += 1;\r\n        setCommentnumstate({ ...commentnumstate });\r\n\r\n\r\n\r\n        await fetch(`${url}/notif/${key.username}`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': \"application/json\" },\r\n            body: JSON.stringify(newnotif),\r\n            credentials: 'include'\r\n        })\r\n\r\n    }\r\n\r\n    const cancelcommentaction = (key) => {\r\n\r\n\r\n        wannacomment[key] = false;\r\n        setWannacomment(wannacomment);\r\n        curcomment[key] = \"\";\r\n        setCurcomment({ ...curcomment });\r\n\r\n    }\r\n\r\n    const viewprofile = (username) => {\r\n\r\n        disp(currview(username));\r\n        nav(`/profile/${username}`);\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n\r\n            {bigopen && <Postpopup trigger={setBigopen} data={whichone.current.post} comheartobj={commentheartobj.current[whichone.current.postid]} type={'homepage'} extra={{ actionperformer: [setCurlikestate, setAlreadystate, setCommentnumstate, setPusher, setSample], action: [curlikestate, alreadystate, commentnumstate, null, sample] }}/*renderer={setSample} rendererval={sample} refresher={bigpreview}*/ />}\r\n\r\n            {\r\n                currentposts.map((each) => (\r\n\r\n                    <div className={each.desc.length < 68 ? themer ? \"sharecomp\" : \"sharecompnight\" : themer ? 'sharecomplong' : 'sharecomplongnight'} key={each._id}>\r\n                        <div className=\"sharecontainer\">\r\n                            <div className=\"shareheader\">\r\n                                <img className={themer ? \"homepagefeedpfps\" : \"homepagefeedpfpsnight\"} src={each.pfp} onClick={() => { viewprofile(each.username) }}></img>\r\n                                <span className={themer ? \"homepagefeedusername\" : \"homepagefeedusernamenight\"} onClick={() => { viewprofile(each.username) }}>{each.username}</span>\r\n                                {!following[each.userid] && <button className={cancelreq[each.userid] ? \"blue_follow_buttonheadhidden\" : \"blue_follow_buttonhead\"} onClick={() => { followtry(each) }}>Follow </button>}\r\n                                {!following[each.userid] && <AddIcon className={cancelreq[each.userid] ? \"justplusheadhidden\" : \"justplushead\"} onClick={() => { followtry(each) }} />}\r\n                                {!following[each.userid] && <button className={isrequested[each.userid] ? \"silver_requested_buttonhead\" : \"silver_requested_buttonheadhidden\"} onClick={() => { requested(each) }} >Requested </button>}\r\n                            </div>\r\n\r\n                            <div className=\"postcontainer\">\r\n                                <img className=\"thepost\" src={each.img} alt=\"\" onDoubleClick={() => { popup(each) }} ></img>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"sharefooter\">\r\n                                <div className=\"shareoptions\">\r\n                                    <div className=\"shareoption\">\r\n                                        <FavoriteIcon fontSize=\"large\" className={alreadystate[each._id] ? \"likeiconrede\" : postlikestate[each._id] ? \"likeiconrede\" : themer ? \"likeicone\" : \"likeiconenight\"} onClick={() => { postliked(each) }} />\r\n                                    </div>\r\n                                    <div className=\"shareoption\">\r\n                                        <AddCommentIcon fontSize=\"large\" className={themer ? \"commenticone\" : \"commenticonenight\"} onClick={() => { makecomment(each._id) }} />\r\n                                    </div>\r\n                                    <div className=\"postdesc\">\r\n                                        <span className={themer ? \"desce\" : \"descenight\"}>{each.desc.length < 130 ? each.desc : `${each.desc.substring(0, 130)}...`}</span>\r\n                                    </div>\r\n                                    {curlikestate[each._id] != 1 && <span className={each.desc.length < 68 ? \"numlikes\" : \"numlikeslong\"}>{curlikestate[each._id]} likes</span>}\r\n                                    {curlikestate[each._id] == 1 && <span className={each.desc.length < 68 ? \"numlikes\" : \"numlikeslong\"}>{curlikestate[each._id]} like</span>}\r\n                                    <span className={commentnumstate[each._id] == 0 ? each.desc.length < 68 ? \"numcommentszero\" : \"numcommentszerolong\" : each.desc.length < 68 ? \"numcomments\" : \"numcommentslong\"} onClick={() => { popup(each) }}>{commentnumstate[each._id] == 0 ? \"No comments\" : commentnumstate[each._id] == 1 ? ' view 1 comment' : `View all ${commentnumstate[each._id]} comments`}</span>\r\n                                    <span className={each.desc.length < 68 ? \"dateposted\" : \"datepostedlong\"}>{dateFormat(each.createdAt).substring(4, 15)}</span>\r\n\r\n                                    <input value={curcomment[each._id]} type=\"text\" className={wannacomment[each._id] ? themer ? \"addcomment\" : \"addcommentnight\" : \"addcommenthidden\"} placeholder=\"Add a comment...\" onChange={(e) => { capturechange(e, each._id) }} />\r\n\r\n                                    <TelegramIcon fontSize=\"large\" className={wannacomment[each._id] ? \"sendericon\" : \"sendericonhidden\"} onClick={() => { commentsender(each) }} />\r\n\r\n                                    <CloseIcon fontSize=\"large\" className={wannacomment[each._id] ? \"cancelcommenticon\" : \"cancelcommenticonhidden\"} onClick={() => { cancelcommentaction(each._id) }} />\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                ))\r\n            }\r\n\r\n            {loader && <div className='loadingmoreposts'></div>}\r\n\r\n        </>\r\n\r\n    );\r\n}\r\n\r\n\r\nexport default Share;","import Share from \"./sharing\";\r\nimport \"../corecss/homepagefeed.css\"\r\n\r\nconst Homepagefeed = ({refer}) => {\r\n    return (  \r\n        <div className=\"feedpane\">\r\n\r\n          <Share refer={refer}/>\r\n        \r\n        </div>\r\n        \r\n    );\r\n}\r\n \r\nexport default Homepagefeed;\r\n\r\n","import \"../corecss/welcomepage.css\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { useEffect, useState, useRef } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { followunfollowobj } from \"../features/followunfollow\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { currview } from '../features/profile';\r\nimport Shimmer from './shimmer.js';\r\n\r\n\r\nconst Sidepain = () => {\r\n\r\n    let [randomsuggestion,setRandomsuggestion] = useState([]);\r\n    let [isrequested,setIsrequested]=useState({});\r\n    let [cancelreq,setCancelreq]=useState({});\r\n    let [showrandom,setShowrandom] = useState(false);\r\n\r\n    let samplee = useSelector((state) => { return state.followyr.value });\r\n    let theme = useSelector((state)=> {return state.themeyr.value});\r\n    let curuser = useSelector((state) => { return state.youryr.value });\r\n\r\n    let setDone = useRef(false);\r\n\r\n    let disp=useDispatch();\r\n    let nav = useNavigate();\r\n\r\n    let url = \"http://localhost:3001\";\r\n    //let url = \"https://social-media-app-backend-final.onrender.com\";\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        setIsrequested(samplee.isrequested);\r\n        setCancelreq(samplee.cancelreq);\r\n\r\n    },[samplee])\r\n\r\n\r\n    const followtry = (each) => {\r\n\r\n        fetch(`${url}/users/follow/${each.usr}`,{\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': \"application/json\" },\r\n            body: JSON.stringify({ \"username\": curuser.usrn }),\r\n            credentials: 'include'\r\n        })    \r\n\r\n        const newnotif =\r\n        {\r\n            username: curuser.usrn,\r\n            type: \"followreq\",\r\n            attachement: null,\r\n            commentifany: null,\r\n            pfp: curuser.pfp,\r\n            fullname: curuser.fullname,\r\n            reference: null\r\n\r\n        };\r\n\r\n        fetch(`${url}/notif/${each.usr}`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': \"application/json\" },\r\n            body: JSON.stringify(newnotif),\r\n            credentials: 'include'\r\n        })\r\n\r\n        setIsrequested((prev)=>({...prev,[each.id]:true}));\r\n        setCancelreq((prev)=>({...prev,[each.id]:true}));\r\n    }\r\n\r\n    useEffect(()=>{\r\n\r\n        disp(followunfollowobj({isrequested:isrequested, cancelreq:cancelreq}));\r\n\r\n    },[isrequested])\r\n\r\n    const requested = (each) => {\r\n\r\n    \r\n        const delnotif =\r\n        {\r\n            username: curuser.usrn,\r\n            type: \"followreqdel\",\r\n            \r\n        };\r\n\r\n        fetch(`${url}/notif/rem/${each.usr}`, {\r\n            method: 'DELETE',\r\n            headers: { 'Content-Type': \"application/json\" },\r\n            body: JSON.stringify(delnotif),\r\n            credentials: 'include'\r\n        })\r\n\r\n\r\n        fetch(`${url}/users/followcancel/${each.usr}`, {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': \"application/json\" },\r\n            body: JSON.stringify({\"username\":curuser.usrn}),\r\n            credentials: 'include'\r\n        })\r\n\r\n        setIsrequested((prev)=>({...prev,[each.id]:false}));\r\n        setCancelreq((prev)=>({...prev,[each.id]:false}));\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        async function randomsuggest() {\r\n\r\n            const result = await fetch(`${url}/users/getall`, {\r\n              credentials: 'include',\r\n            })\r\n            \r\n            const data = await result.json();\r\n\r\n\r\n            let newarray = data.filter((each)=>{\r\n\r\n                for(let i = 0; i<curuser.following.length; i++){\r\n\r\n                    if (each.id == curuser.following[i]){\r\n                        return false;\r\n                    }\r\n\r\n                }\r\n\r\n                if (each.id == curuser.userid){\r\n                    return false;\r\n                }\r\n\r\n                return true;\r\n\r\n            })\r\n\r\n            for (let i = newarray.length - 1; i > 0; i--) {\r\n                const j = Math.floor(Math.random() * (i + 1));\r\n                [newarray[i], newarray[j]] = [newarray[j], newarray[i]];\r\n            }\r\n\r\n            newarray = newarray.slice(0, 5);\r\n\r\n            setRandomsuggestion(newarray);\r\n            setShowrandom(true);\r\n        }\r\n\r\n        if (curuser.userid.length!=0 && setDone.current == false){\r\n\r\n            randomsuggest();\r\n            setDone.current = true; \r\n        }\r\n                \r\n    },[curuser])\r\n\r\n\r\n    const profview = (username)=>{\r\n        \r\n        disp(currview(username));\r\n        nav(`/profile/${username}`);\r\n\r\n    }\r\n\r\n\r\n    return ( \r\n\r\n        <>\r\n           <div className=\"sidepaincont1\">\r\n              <span className={ theme ? \"sugge\" : \"suggenight\"}>Suggested for you</span>\r\n              <ul className=\"followusers\">\r\n\r\n                {showrandom \r\n                 \r\n\r\n                    ?\r\n\r\n                    randomsuggestion.map((each)=>(\r\n\r\n                        <li key = {each.id} className=\"userlistitem\">\r\n                            <div className=\"listdiv\">\r\n                                <span className={ theme ? \"listusernameshorte\" : \"listusernameshortenight\" } onClick={()=>{profview(each.usr)}}>{each.usr}</span>\r\n                                <span className={ theme ? \"listfnameshorte\" : \"listfnameshortenight\" } onClick={()=>{profview(each.usr)}}>{each.fname}</span>\r\n\r\n                                <img className = \"listpfpsp\" src={each.pfp} onClick={()=>{profview(each.usr)}} ></img>\r\n                               \r\n                                <button className= {cancelreq[each.id] ? \"blue_follow_buttonhidden\" : \"blue_follow_button\"} onClick={()=>{followtry(each)}} >Follow </button>\r\n                                <AddIcon className={cancelreq[each.id] ? \"justplushidden\" : \"justplus\" } onClick={()=>{followtry(each)}}/>\r\n                                <button className={ isrequested[each.id] ? \"silver_requested_button\" : \"silver_requested_buttonhidden\"}   onClick = {()=>{requested(each)}} >Requested </button>\r\n                            </div>\r\n                        </li>\r\n\r\n                    ))\r\n\r\n                    :\r\n\r\n                    <>\r\n                        <div className='falsesuggestions'>\r\n                            <div className=\"eachfalsesugg\">\r\n\r\n                            <div className='falsesuggcircle'>\r\n                               <Shimmer></Shimmer>\r\n                            </div>\r\n                            <div className='falsesuggusername'>\r\n                                    <Shimmer></Shimmer>\r\n                            </div>\r\n                            <div className='falsesugguserfname'>\r\n                                    <Shimmer></Shimmer>\r\n                            </div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"eachfalsesugg\">\r\n\r\n                            <div className='falsesuggcircle'>\r\n                               <Shimmer></Shimmer>\r\n                            </div>\r\n                            <div className='falsesuggusername'>\r\n                                    <Shimmer></Shimmer>\r\n                            </div>\r\n                            <div className='falsesugguserfname'>\r\n                                    <Shimmer></Shimmer>\r\n                            </div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"eachfalsesugg\">\r\n\r\n                            <div className='falsesuggcircle'>\r\n                               <Shimmer></Shimmer>\r\n                            </div>\r\n                            <div className='falsesuggusername'>\r\n                                    <Shimmer></Shimmer>\r\n                            </div>\r\n                            <div className='falsesugguserfname'>\r\n                                    <Shimmer></Shimmer>\r\n                            </div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"eachfalsesugg\">\r\n\r\n                            <div className='falsesuggcircle'>\r\n                               <Shimmer></Shimmer>\r\n                            </div>\r\n                            <div className='falsesuggusername'>\r\n                                    <Shimmer></Shimmer>\r\n                            </div>\r\n                            <div className='falsesugguserfname'>\r\n                                    <Shimmer></Shimmer>\r\n                            </div>\r\n\r\n                            </div>\r\n\r\n                            <div className=\"eachfalsesugg\">\r\n\r\n                            <div className='falsesuggcircle'>\r\n                               <Shimmer></Shimmer>\r\n                            </div>\r\n                            <div className='falsesuggusername'>\r\n                                    <Shimmer></Shimmer>\r\n                            </div>\r\n                            <div className='falsesugguserfname'>\r\n                                    <Shimmer></Shimmer>\r\n                            </div>\r\n\r\n                            </div>\r\n                           \r\n                        </div>\r\n\r\n                    </>\r\n\r\n                }\r\n\r\n              </ul>\r\n\r\n           </div>\r\n        \r\n        </>\r\n    \r\n    );\r\n}\r\n \r\nexport default Sidepain;","import ReactDom from 'react-dom';\r\nimport '../../corecss/createstorymodal.css';\r\nimport { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Loadingmodal from './loadingmodal';\r\n\r\n\r\nconst Storymodal = ({ trigger, changes, current }) => {\r\n\r\n\r\n    let [sample, setSample] = useState(false);\r\n    let [loader, setLoader] = useState(false);\r\n    let [postvis, setPostvis] = useState(false);\r\n    let [selectanother, setSelectanother] = useState(false);\r\n    let [extensionerror, setExtensionerror] = useState(false);\r\n    let [failure, setFailure] = useState(true);\r\n    let [data, setData] = useState({\r\n        type: 'private',\r\n        thepost: null\r\n    })\r\n\r\n    let theme = useSelector((state) => { return state.themeyr.value });\r\n    let curuser = useSelector((state) => { return state.youryr.value });\r\n\r\n    let url = \"http://localhost:3001\";\r\n    //let url = \"https://social-media-app-backend-final.onrender.com\";\r\n\r\n\r\n\r\n    function resizeBase64Img(base64, newWidth, newHeight) {\r\n        return new Promise((resolve, reject) => {\r\n            const canvas = document.createElement(\"canvas\");\r\n            canvas.width = newWidth;\r\n            canvas.height = newHeight;\r\n            let context = canvas.getContext(\"2d\");\r\n            let img = document.createElement(\"img\");\r\n            img.src = base64;\r\n            img.onload = function () {\r\n                context.scale(newWidth / img.width, newHeight / img.height);\r\n                context.drawImage(img, 0, 0);\r\n                resolve(canvas.toDataURL());\r\n            }\r\n        });\r\n    }\r\n\r\n    const closemodal = () => {\r\n        trigger(false);\r\n    }\r\n\r\n    const creator = async (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        const result = await fetch(`${url}/story/create/${curuser.usrn}`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': \"application/json\" },\r\n            body: JSON.stringify(data),\r\n            credentials: 'include'\r\n        })\r\n\r\n        const datareal = await result.json();\r\n        if (datareal === 'compression required') {\r\n\r\n            const secondresult = await resizeBase64Img(data.thepost, 3200, 3200);\r\n\r\n            let newobj = {\r\n                type: data.type,\r\n                thepost: secondresult\r\n            }\r\n            const thirdresult = await fetch(`${url}/story/create/${curuser.usrn}`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': \"application/json\" },\r\n                body: JSON.stringify(newobj),\r\n                credentials: 'include'\r\n            })\r\n\r\n            const redo = await thirdresult.json();\r\n\r\n            if (redo === 'compression required') {\r\n\r\n                setSelectanother(true);\r\n                setTimeout(() => {\r\n                    setSelectanother(false);\r\n                }, 2000)\r\n\r\n            } else {\r\n\r\n                setLoader(true);\r\n                setTimeout(() => {\r\n\r\n                    trigger(false);\r\n                    setLoader(false);\r\n                    changes(!current);\r\n\r\n                }, 5000)\r\n            }\r\n\r\n        } else {\r\n\r\n            setLoader(true);\r\n            setTimeout(() => {\r\n\r\n                trigger(false);\r\n                setLoader(false);\r\n                changes(!current);\r\n\r\n            }, 5000)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    const changesetter = (e) => {\r\n\r\n        let val = e.target.value;\r\n        setData({ ...data, type: val });\r\n        setSample(!sample);\r\n\r\n    }\r\n\r\n    const imgupload = (e) => {\r\n\r\n\r\n        if (e.target.files[0] != undefined) {\r\n\r\n            setSample(!sample);\r\n            const reader = new FileReader();\r\n\r\n            let datatype = e.target.files[0].name.split('.').pop();\r\n            if (datatype != 'jpg' && datatype != 'jpeg' && datatype != 'png' && datatype != 'webp') {\r\n\r\n                setFailure(false);\r\n                setExtensionerror(true);\r\n                setPostvis(false);\r\n\r\n                setTimeout(() => {\r\n                    setExtensionerror(false);\r\n                }, 5000);\r\n                return;\r\n            } else {\r\n                setFailure(true);\r\n            }\r\n\r\n            reader.readAsDataURL(e.target.files[0]);\r\n            reader.onload = () => {\r\n                setData({ ...data, thepost: reader.result });\r\n\r\n            }\r\n\r\n            reader.onerror = error => {\r\n                console.log(error);\r\n            }\r\n            setPostvis(true);\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return ReactDom.createPortal(\r\n        <>\r\n\r\n            {loader && <Loadingmodal trigger={setLoader} />}\r\n\r\n            <div className='blurremains'></div>\r\n            <div className={postvis ? theme ? 'storyformbig' : \"storyformbig nightbgstory\" : theme ? 'storyform' : \"storyform nightbgstory\"}>\r\n\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" className={theme ? \"w-6 h-6 cancelspost\" : \"w-6 h-6 cancelspost nighttextstory\"} onClick={closemodal} >\r\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\" />\r\n                </svg>\r\n\r\n                <h1 className={theme ? 'theheading' : \"theheading nighttextstory\"}>post a story</h1>\r\n                <form id='form'>\r\n\r\n                    <span className={theme ? \"typelabel\" : \"typelabel nighttextstory \"}>select story type</span>\r\n                    <select name=\"storytype\" id={theme ? \"storytype\" : \"storytypenight\"} onChange={(e) => { changesetter(e) }}>\r\n                        <option value=\"private\">private</option>\r\n                        <option value=\"public\">public</option>\r\n                    </select>\r\n\r\n                    {selectanother && <span className=\"fallbackimg\">please select a smaller image</span>}\r\n                    {extensionerror && <span className=\"wrongextension\">please select .jpg , .jpeg , .png or .webp files only</span>}\r\n\r\n                    <div className=\"input-groups\">\r\n                        <div className={theme ? 'hiders' : \"hiders hidersnight\"}>\r\n                            choose an image\r\n                            <input id='filess' onChange={(e) => { imgupload(e) }} name='thepost' type=\"file\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    {failure && data.thepost && <button className=\"submits\" onClick={(e) => { creator(e) }}>post</button>}\r\n                </form>\r\n            </div>\r\n\r\n        </>\r\n        , document.getElementById('portal')\r\n    );\r\n}\r\n\r\nexport default Storymodal;","import { useEffect, useState, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { yoursets } from '../features/you'\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport \"../corecss/welcomepage.css\";\r\nimport Header from './header.js';\r\nimport Homepagefeed from './homepagefeed.js';\r\nimport Sidepain from './sidepain';\r\nimport Leftpain from './leftpain';\r\nimport { totstories } from '../features/storydata';\r\nimport { settingsdef } from '../features/forsettings.js';\r\nimport Storymodal from './modals/createstorymodal';\r\nimport Shimmer from './shimmer.js';\r\n\r\n\r\nconst Welcome = () => {\r\n\r\n    let [flag, setFlag] = useState(true);\r\n    let [usr, setUsr] = useState(null);\r\n    let [story, setStory] = useState(null);\r\n    let [displayer, setDisplayer] = useState(null);\r\n    let [img, setImg] = useState(null);\r\n    let [starr, setStarr] = useState(null);\r\n    let [ustory, setUstory] = useState(null);\r\n    let [storytabopener, setStorytabopener] = useState(false);\r\n    let [storychanged, setStorychanged] = useState(false);\r\n\r\n    let domref = useRef(null);\r\n    let colorfulref = useRef([]);\r\n    let sliderref = useRef(null);\r\n    let userfixer = useRef({ verdict: false, val: null });\r\n\r\n    let curuser = useSelector((state) => { return state.youryr.value });\r\n    let theme = useSelector((state) => { return state.themeyr.value });\r\n\r\n    let nav = useNavigate();\r\n    let disp = useDispatch();\r\n\r\n\r\n    let url = \"http://localhost:3001\";\r\n    //let url = \"https://social-media-app-backend-final.onrender.com\";\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        async function welcomer() {\r\n\r\n            const result = await fetch(`${url}/welcome`, {\r\n                credentials: 'include'\r\n            })\r\n\r\n            const data = await result.json();\r\n\r\n            if (data !== 'auth failed') {\r\n\r\n                setUsr(data.username);\r\n                setImg(data.profpic);\r\n\r\n                let settingsobj = {\r\n                    username: data.username,\r\n                    fname: data.fname,\r\n                    gender: data.gender,\r\n                    bio: data.bio,\r\n                    acctype: data.acctype,\r\n                    profpic: data.profpic,\r\n                    email: data.emailID\r\n                }\r\n\r\n                disp(settingsdef(settingsobj));\r\n\r\n                let newobj2;\r\n\r\n\r\n                if (data.userstory.length == 0) {\r\n\r\n                    newobj2 = {\r\n                        pfp: data.profpic,\r\n                        usrn: data.username,\r\n                        email: data.emailID,\r\n                        fullname: data.fname,\r\n                        userid: data.userid,\r\n                        following: data.following,\r\n                        blocked: data.blocklist,\r\n                        story: false,\r\n                        acctype: data.acctype\r\n                    };\r\n\r\n                } else {\r\n\r\n\r\n                    newobj2 = {\r\n                        pfp: data.profpic,\r\n                        usrn: data.username,\r\n                        email: data.emailID,\r\n                        fullname: data.fname,\r\n                        userid: data.userid,\r\n                        following: data.following,\r\n                        blocked: data.blocklist,\r\n                        story: true,\r\n                        acctype: data.acctype\r\n                    };\r\n\r\n                }\r\n\r\n                disp(yoursets(newobj2));\r\n\r\n                if (data.userstory != false) {\r\n                    userfixer.current = { verdict: true, val: data.userstory };\r\n                    setUstory(data.userstory);\r\n                }\r\n            }\r\n            else {\r\n\r\n                nav('/', { replace: true });\r\n            }\r\n\r\n            if (usr != null) {\r\n\r\n\r\n                fetch(`${url}/stories`, {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': \"application/json\" },\r\n                    body: JSON.stringify({ \"username\": usr }),\r\n                    credentials: 'include'\r\n                }).then((res) => {\r\n                    return res.json();\r\n                }).then((data) => {\r\n\r\n                    let starr = data.array.map((each) => {\r\n                        return each[2];\r\n                    });\r\n\r\n\r\n                    if (userfixer.current.verdict) {\r\n                        starr.unshift(userfixer.current.val);\r\n                        userfixer.current = { verdict: false, val: 'furtherprocess' };\r\n                    }\r\n                    else {\r\n                        starr.unshift(null);\r\n                    }\r\n\r\n                    setStarr(starr);\r\n\r\n\r\n                    data.array.unshift([img, usr]);\r\n                    let q = -1;\r\n                    let trimarr = data.array.map((eachitem) => {\r\n                        if (eachitem[1].length > 15) {\r\n                            eachitem[1] = eachitem[1].substring(0, 13) + '..';\r\n                        }\r\n                        q = q + 1;\r\n                        return [eachitem[0], eachitem[1], q];\r\n                    }\r\n                    );\r\n\r\n\r\n                    let iscolorful = [];\r\n\r\n                    async function colorfinder() {\r\n\r\n                        for (let i = 1; i < trimarr.length; i++) {\r\n\r\n\r\n                            const result = await fetch(`${url}/colorchecker/${trimarr[i][1]}`, {\r\n                                method: 'POST',\r\n                                credentials: 'include',\r\n                                headers: { 'Content-Type': 'application/json' },\r\n                                body: JSON.stringify({ username: usr })\r\n                            })\r\n\r\n                            const data = await result.json();\r\n\r\n                            if (!data) {\r\n                                iscolorful.push(trimarr[i][1]);\r\n                            }\r\n\r\n\r\n                        }\r\n\r\n\r\n                        colorfulref.current = iscolorful;\r\n\r\n\r\n                        let totalstory = [];\r\n                        for (let i = 0; i < trimarr.length; i++) {\r\n\r\n                            if (starr[i] == null) {\r\n                                continue;\r\n                            }\r\n\r\n\r\n                            const postarray = starr[i].map((each) => {\r\n                                return {\r\n                                    img: each.thepost,\r\n                                    time: each.timeposted\r\n                                }\r\n                            })\r\n\r\n                            let newobj = {\r\n\r\n\r\n                                name: trimarr[i][1],\r\n                                pfp: trimarr[i][0],\r\n                                thepost: postarray,\r\n                                num: postarray.length,\r\n                            }\r\n\r\n                            totalstory.push(newobj);\r\n\r\n\r\n                        }\r\n\r\n\r\n                        let newarr = [];\r\n                        let helperfinal = [];\r\n\r\n                        for (let i = 1; i < trimarr.length; i++) {\r\n\r\n                            if (!colorfulref.current.includes(trimarr[i][1])) {\r\n\r\n                                newarr.push(trimarr[i]);\r\n                                helperfinal.push(trimarr[i]);\r\n\r\n                            } else {\r\n\r\n                                newarr.unshift(trimarr[i]);\r\n                                helperfinal.unshift(trimarr[i]);\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                        if (userfixer.current.val != null) {\r\n                            helperfinal.unshift(trimarr[0]);\r\n                        }\r\n\r\n                        newarr.unshift(trimarr[0]);\r\n                        let totalstorynew = [];\r\n\r\n                        for (let i = 0; i < helperfinal.length; i++) {\r\n\r\n                            let name = helperfinal[i][1];\r\n                            let onevalarray = totalstory.filter((each) => each.name == name);\r\n                            totalstorynew.push(onevalarray[0]);\r\n\r\n                        }\r\n\r\n                        trimarr = helperfinal;\r\n                        totalstory = totalstorynew;\r\n\r\n\r\n                        let collection = {\r\n                            trimarr,\r\n                            totalstory,\r\n                            iscolorful\r\n                        }\r\n\r\n                        disp(totstories(collection));\r\n                        setStory(newarr);\r\n                        setDisplayer(true);\r\n\r\n                    }\r\n\r\n                    colorfinder();\r\n\r\n                }).catch((err) => {\r\n                    console.log(err);\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n        welcomer();\r\n\r\n    }, [usr, storychanged]);\r\n\r\n\r\n    let storyopener = (acc, pfp, idx) => {\r\n\r\n\r\n        if (acc != usr || ustory != null) {\r\n\r\n            let extra = 'multiple';\r\n            let self = 'none';\r\n\r\n            nav(`/stories/${acc}/${extra}/${self}`);\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    let storysetter = (selectionarr) => {\r\n        fetch(`${url}/newstory`, {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ stories: selectionarr, username: usr })\r\n        }).then((res) => {\r\n            return res.json();\r\n        }).then((data) => {\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n\r\n    console.log(sliderref.current);\r\n\r\n\r\n    return (\r\n\r\n        <>\r\n            {flag &&\r\n                <>\r\n                    <Header caller={'welcomepage'} extra={null} />\r\n\r\n                    {storytabopener && <Storymodal trigger={setStorytabopener} changes={setStorychanged} current={storychanged} />}\r\n\r\n\r\n                    <div className={theme ? 'hpagecontainer' : \"hpagecontainernight\"}>\r\n\r\n                        <div className='leftpain'>\r\n                            <Leftpain parent={'homepage'} />\r\n                        </div>\r\n\r\n                        <div ref={sliderref} className='topdown'>\r\n                            <div id=\"storyscroll\" className={theme ? 'tw-overflow-x-auto tw-flex tw-border tw-border-black tw-border-solid' : 'tw-overflow-x-auto tw-flex tw-border tw-border-white tw-border-solid'} ref={domref}>\r\n                                {displayer\r\n\r\n                                    ?\r\n\r\n\r\n                                    story.map((eachuser) => (\r\n                                        <div className='tw-pl-0.4' key={eachuser[1]}>\r\n\r\n\r\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" className=\"w-6 h-6 plusc\" onClick={() => { setStorytabopener(true) }}>\r\n                                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 9v6m3-3H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                                            </svg>\r\n\r\n                                            <div id={eachuser[1] == usr ? ustory == null ? 'qwertyold' : theme ? 'qwertynew' : 'qwertynewnight' : colorfulref.current.includes(eachuser[1]) ? theme ? 'qwertynew' : 'qwertynewnight' : 'qwertyold'} className={theme ? ' tw-cursor-pointer tw-p-1 tw-bg-white tw-m-2.5 tw-overflow-hidden tw-border-solid tw-border-black-800 tw-border-2 tw-rounded-full' : 'tw-cursor-pointer tw-p-1 tw-bg-black tw-m-2.5 tw-overflow-hidden tw-border-solid tw-border-white-800 tw-border-2 tw-rounded-full'} onClick={() => { storyopener(eachuser[1], eachuser[0], eachuser[2]) }}>\r\n                                                <img src={eachuser[0]} className='storylanepfp'></img>\r\n\r\n                                            </div>\r\n\r\n\r\n\r\n                                            <div className='tw-flex tw-justify-center tw-items-center '>\r\n                                                <label className={theme ? ' tw-w-28 tw-h-6 tw-overflow-hidden tw-text-center' : ' tw-w-28 tw-h-6 tw-text-white tw-overflow-hidden tw-text-center'}>{eachuser[1] == usr ? \"You\" : eachuser[1]}</label>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))\r\n\r\n                                    :\r\n\r\n                                    <>\r\n                                        <div className='falsestory'>\r\n                                            <div className='falsestorycircle'>\r\n                                                <Shimmer></Shimmer>\r\n                                            </div>\r\n                                            <div className='falsestoryposter'>\r\n                                                <Shimmer></Shimmer>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className='falsestory'>\r\n                                            <div className='falsestorycircle'>\r\n                                                <Shimmer></Shimmer>\r\n                                            </div>\r\n                                            <div className='falsestoryposter'>\r\n                                                <Shimmer></Shimmer>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                        <div className='falsestory'>\r\n                                            <div className='falsestorycircle'>\r\n                                                <Shimmer></Shimmer>\r\n                                            </div>\r\n                                            <div className='falsestoryposter'>\r\n                                                <Shimmer></Shimmer>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </>\r\n\r\n\r\n                                }\r\n                            </div>\r\n                            {curuser.userid.length != 0 && <Homepagefeed refer={sliderref.current} />}\r\n                        </div>\r\n\r\n                        <div className='sidepane'>\r\n                            <Sidepain />\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n\r\n                </>\r\n            }\r\n        </>\r\n\r\n\r\n\r\n\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Welcome;\r\n\r\n\r\n"],"names":["_ref","hider","trigger","data","comheartobj","type","extra","curuser","useSelector","state","youryr","value","theme","themeyr","disp","useDispatch","nav","useNavigate","postliked","setPostliked","useState","undefined","isliked","likes","map","each","username","includes","usrn","curlikestate","setCurlikestate","likesnum","commentlikestate","setCommentlikestate","commentobj","commentred","setCommentred","curcomment","setCurcomment","openyesno","setOpenyesno","delsuccess","setDelsuccess","url","comments","_id","numlikes","datedifffinder","pastdate","date","diff","Date","days","Math","floor","hours","minutes","round","concat","deleter","profileviewer","currview","ReactDom","_jsxs","_Fragment","children","_jsx","className","xmlns","width","height","fill","viewBox","onClick","nextplease","nextrequested","nextprofimgrequested","d","prevplease","closemodal","Yesnomodal","text","bold","purpose","thepost","src","img","alt","pfp","strokeWidth","stroke","deletepost","strokeLinecap","strokeLinejoin","desc","createdAt","thecomment","timeposted","key","filter","newobj","liker","commenter","commentid","fetch","method","headers","body","JSON","stringify","credentials","delnotif","attachement","commentifany","newnotif","fullname","reference","commentliked","likethepost","newlikes","action","actionperformer","push","placeholder","onChange","e","target","capturechange","async","newid","uuidv4","newcomment","unshift","commentsender","document","getElementById","refer","samplee","followyr","themer","useEffect","setIsrequested","isrequested","setCancelreq","cancelreq","following","setFollowing","wannacomment","setWannacomment","sample","setSample","currentposts","setCurrentposts","skipval","setSkipval","loader","setLoader","postlikestate","setPostlikestate","alreadystate","setAlreadystate","bigopen","setBigopen","commentnumstate","setCommentnumstate","pusher","setPusher","commentheartobj","useRef","whichone","doublstopper","scrollstopper","lastloader","result","json","redobj","already","numofcom","eachlet","userid","prev","current","length","i","j","random","initialtop","fetchData","useCallback","shuffler","handleScroll","abs","scrollHeight","clientHeight","scrollTop","setTimeout","addEventListener","removeEventListener","followtry","followunfollowobj","popup","post","postid","viewprofile","Postpopup","AddIcon","requested","onDoubleClick","FavoriteIcon","fontSize","AddCommentIcon","substring","dateFormat","TelegramIcon","CloseIcon","Share","Sidepain","randomsuggestion","setRandomsuggestion","showrandom","setShowrandom","setDone","usr","id","newarray","slice","randomsuggest","profview","fname","Shimmer","changes","postvis","setPostvis","selectanother","setSelectanother","extensionerror","setExtensionerror","failure","setFailure","setData","creator","preventDefault","secondresult","base64","newWidth","newHeight","Promise","resolve","reject","canvas","createElement","context","getContext","onload","scale","drawImage","toDataURL","thirdresult","Loadingmodal","name","val","changesetter","files","reader","FileReader","datatype","split","pop","readAsDataURL","onerror","error","console","log","imgupload","Welcome","flag","setFlag","setUsr","story","setStory","displayer","setDisplayer","setImg","starr","setStarr","ustory","setUstory","storytabopener","setStorytabopener","storychanged","setStorychanged","domref","colorfulref","sliderref","userfixer","verdict","profpic","newobj2","settingsobj","gender","bio","acctype","email","emailID","settingsdef","userstory","blocked","blocklist","yoursets","replace","then","res","array","q","trimarr","eachitem","iscolorful","totalstory","postarray","time","num","newarr","helperfinal","totalstorynew","onevalarray","collection","totstories","colorfinder","catch","err","welcomer","Header","caller","Storymodal","Leftpain","parent","ref","eachuser","storyopener","acc","idx","self","Homepagefeed"],"sourceRoot":""}